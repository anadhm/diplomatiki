
xdp_prog_kern.o:	file format elf64-bpf

Disassembly of section xdp_morton_filter:

0000000000000000 <xdp_morton_filter_func>:
; 	void *data_end = (void *)(long)ctx->data_end;
       0:	r2 = *(u32 *)(r1 + 4)
; 	void *data = (void *)(long)ctx->data;
       1:	r1 = *(u32 *)(r1 + 0)
; 	if (eth + 1 > data_end){
       2:	r3 = r1
       3:	r3 += 14
       4:	r6 = 1
       5:	if r3 > r2 goto +41 <LBB0_37>
; 	if (bpf_ntohs(eth->h_proto) != ETH_P_IP){
       6:	r3 = *(u8 *)(r1 + 12)
       7:	r4 = *(u8 *)(r1 + 13)
       8:	r4 <<= 8
       9:	r4 |= r3
      10:	if r4 == 8 goto +14 <LBB0_3>
      11:	r1 = 111
; 		bpf_print("PASS in eth proto");
      12:	*(u16 *)(r10 - 8) = r1
      13:	r1 = 8390050456720143461 ll
      15:	*(u64 *)(r10 - 16) = r1
      16:	r1 = 2336920844209701200 ll
      18:	*(u64 *)(r10 - 24) = r1
      19:	r1 = r10
      20:	r1 += -24
      21:	r2 = 18
      22:	call 6
      23:	r6 = 2
      24:	goto +22 <LBB0_37>

00000000000000c8 <LBB0_3>:
      25:	r6 = 2
; 	if (iph + 1 > data_end){
      26:	r3 = r1
      27:	r3 += 34
      28:	if r3 > r2 goto +18 <LBB0_37>
; 	if (iph->protocol != IPPROTO_UDP){ // IPPROTO_UDP == 17
      29:	r3 = *(u8 *)(r1 + 23)
      30:	if r3 == 17 goto +18 <LBB0_6>
      31:	r2 = 0
; 		bpf_print("drop in udp,proto=%u",iph->protocol);
      32:	*(u8 *)(r10 - 4) = r2
      33:	r2 = 1965374831
      34:	*(u32 *)(r10 - 8) = r2
      35:	r2 = 8390050456921990261 ll
      37:	*(u64 *)(r10 - 16) = r2
      38:	r2 = 2336920844698088036 ll
      40:	*(u64 *)(r10 - 24) = r2
      41:	r3 = *(u8 *)(r1 + 23)
      42:	r1 = r10
      43:	r1 += -24
      44:	r2 = 21
      45:	call 6

0000000000000170 <LBB0_36>:
      46:	r6 = 1

0000000000000178 <LBB0_37>:
; }
      47:	r0 = r6
      48:	exit

0000000000000188 <LBB0_6>:
; 	if (udph + 1 > data_end){
      49:	r3 = r1
      50:	r3 += 42
      51:	r6 = 1
      52:	if r3 > r2 goto -6 <LBB0_37>
; 	if (udph->dest != 13568){// 53(10) == 0x0035, be-> 0x3500 == 13658(10)
      53:	r3 = *(u16 *)(r1 + 36)
      54:	r6 = 1
      55:	if r3 != 13568 goto -9 <LBB0_37>
; 	if (dnsh + 1 > data_end){
      56:	r3 = r1
      57:	r3 += 54
      58:	r6 = 1
      59:	if r3 > r2 goto -13 <LBB0_37>
      60:	r6 = 0
; 	if (name + 1 > data_end){
      61:	r0 = r1
      62:	r0 += 55
      63:	if r0 > r2 goto -17 <LBB0_37>
      64:	r6 = 1
; 		if (name + i + 1 > data_end) {
      65:	if r0 > r2 goto -19 <LBB0_37>
      66:	r4 = 0
; 		if (*(char *)(name+i) == 0) {
      67:	r8 = *(u8 *)(r3 + 0)
      68:	r8 <<= 56
      69:	r8 s>>= 56
      70:	r9 = 0
      71:	r7 = 0
      72:	r3 = 0
      73:	r5 = 0
      74:	*(u64 *)(r10 - 40) = r5
      75:	r5 = 0
      76:	if r8 == 0 goto +813 <LBB0_15>
; 		if (name + i + 1 > data_end) {
      77:	r3 = r1
      78:	r3 += 56
      79:	r6 = 1
      80:	if r3 > r2 goto -34 <LBB0_37>
      81:	r3 = 1
      82:	*(u64 *)(r10 - 48) = r3
      83:	r3 = 0
; 		if (*(char *)(name+i) == 0) {
      84:	r4 = *(u8 *)(r0 + 0)
      85:	r4 <<= 56
      86:	r4 s>>= 56
      87:	r5 = r8
      88:	*(u64 *)(r10 - 40) = r4
      89:	if r4 == 0 goto +795 <LBB0_14>
      90:	r6 = 1
; 		if (name + i + 1 > data_end) {
      91:	r3 = r1
      92:	r3 += 57
      93:	if r3 > r2 goto -47 <LBB0_37>
      94:	r3 = 0
      95:	r7 = 2
      96:	r4 = 1
; 		if (*(char *)(name+i) == 0) {
      97:	r0 = *(u8 *)(r1 + 56)
      98:	r0 <<= 56
      99:	r0 s>>= 56
     100:	r9 = 1
     101:	r5 = r8
     102:	if r0 == 0 goto +787 <LBB0_15>
     103:	r6 = 1
; 		if (name + i + 1 > data_end) {
     104:	r3 = r1
     105:	r3 += 58
     106:	if r3 > r2 goto -60 <LBB0_37>
     107:	r3 = 0
     108:	r9 = 3
; 		if (*(char *)(name+i) == 0) {
     109:	r7 = *(u8 *)(r1 + 57)
     110:	r5 = r8
     111:	if r7 == 0 goto +1371 <LBB0_13>
; 		if (name + i + 1 > data_end) {
     112:	r3 = r1
     113:	r3 += 59
     114:	if r3 > r2 goto -68 <LBB0_37>
     115:	r3 = *(u64 *)(r10 - 40)
     116:	r3 <<= 8
     117:	r3 += r8
     118:	r0 <<= 16
     119:	r0 += r3
     120:	r7 <<= 24
     121:	r7 += r0
     122:	r3 = r7
     123:	r3 *= -862048943
     124:	r4 = 4294836224 ll
     126:	r3 &= r4
     127:	r7 *= 380141568
     128:	r3 >>= 17
     129:	r3 |= r7
     130:	r3 *= 461845907
     131:	r4 = 4294443008 ll
     133:	r5 = r3
     134:	r5 &= r4
     135:	r3 <<= 13
     136:	r5 >>= 19
     137:	r3 |= r5
     138:	r3 *= 5
     139:	r3 += -430675100
     140:	r7 = 4
     141:	r4 = 0
; 		if (*(char *)(name+i) == 0) {
     142:	r8 = *(u8 *)(r1 + 58)
     143:	r8 <<= 56
     144:	r8 s>>= 56
     145:	r9 = 0
     146:	r5 = 0
     147:	*(u64 *)(r10 - 40) = r5
     148:	r5 = 0
     149:	if r8 == 0 goto +740 <LBB0_15>
; 		if (name + i + 1 > data_end) {
     150:	r4 = r1
     151:	r4 += 60
     152:	if r4 > r2 goto -106 <LBB0_37>
     153:	r4 = 5
; 		if (*(char *)(name+i) == 0) {
     154:	*(u64 *)(r10 - 48) = r4
     155:	r4 = *(u8 *)(r1 + 59)
     156:	r4 <<= 56
     157:	r4 s>>= 56
     158:	r5 = r8
     159:	*(u64 *)(r10 - 40) = r4
     160:	if r4 == 0 goto +724 <LBB0_14>
; 		if (name + i + 1 > data_end) {
     161:	r5 = r1
     162:	r5 += 61
     163:	if r5 > r2 goto -117 <LBB0_37>
     164:	r7 = 6
     165:	r4 = 1
; 		if (*(char *)(name+i) == 0) {
     166:	r0 = *(u8 *)(r1 + 60)
     167:	r0 <<= 56
     168:	r0 s>>= 56
     169:	r9 = 1
     170:	r5 = r8
     171:	if r0 == 0 goto +718 <LBB0_15>
     172:	r6 = 1
; 		if (name + i + 1 > data_end) {
     173:	r5 = r1
     174:	r5 += 62
     175:	if r5 > r2 goto -129 <LBB0_37>
     176:	r9 = 7
; 		if (*(char *)(name+i) == 0) {
     177:	r7 = *(u8 *)(r1 + 61)
     178:	r5 = r8
     179:	if r7 == 0 goto +1303 <LBB0_13>
; 		if (name + i + 1 > data_end) {
     180:	r5 = r1
     181:	r5 += 63
     182:	if r5 > r2 goto -136 <LBB0_37>
     183:	r4 = *(u64 *)(r10 - 40)
     184:	r4 <<= 8
     185:	r4 += r8
     186:	r0 <<= 16
     187:	r0 += r4
     188:	r7 <<= 24
     189:	r7 += r0
     190:	r5 = r7
     191:	r5 *= -862048943
     192:	r4 = 4294836224 ll
     194:	r5 &= r4
     195:	r7 *= 380141568
     196:	r5 >>= 17
     197:	r5 |= r7
     198:	r5 *= 461845907
     199:	r5 ^= r3
     200:	r3 = 4294443008 ll
     202:	r4 = r5
     203:	r4 &= r3
     204:	r5 <<= 13
     205:	r4 >>= 19
     206:	r5 |= r4
     207:	r5 *= 5
     208:	r5 += -430675100
     209:	r7 = 8
     210:	r4 = 0
; 		if (*(char *)(name+i) == 0) {
     211:	r8 = *(u8 *)(r1 + 62)
     212:	r8 <<= 56
     213:	r8 s>>= 56
     214:	r9 = 0
     215:	*(u64 *)(r10 - 56) = r5
     216:	r3 = r5
     217:	r5 = 0
     218:	*(u64 *)(r10 - 40) = r5
     219:	r5 = 0
; 		if (*(char *)(name+i) == 0) {
     220:	if r8 == 0 goto +669 <LBB0_15>
; 		if (name + i + 1 > data_end) {
     221:	r3 = r1
     222:	r3 += 64
     223:	if r3 > r2 goto -177 <LBB0_37>
     224:	r3 = 9
; 		if (*(char *)(name+i) == 0) {
     225:	*(u64 *)(r10 - 48) = r3
     226:	r4 = *(u8 *)(r1 + 63)
     227:	r4 <<= 56
     228:	r4 s>>= 56
     229:	r3 = *(u64 *)(r10 - 56)
     230:	r5 = r8
     231:	*(u64 *)(r10 - 40) = r4
     232:	if r4 == 0 goto +652 <LBB0_14>
; 		if (name + i + 1 > data_end) {
     233:	r3 = r1
     234:	r3 += 65
     235:	if r3 > r2 goto -189 <LBB0_37>
     236:	r7 = 10
     237:	r4 = 1
; 		if (*(char *)(name+i) == 0) {
     238:	r0 = *(u8 *)(r1 + 64)
     239:	r0 <<= 56
     240:	r0 s>>= 56
     241:	r9 = 1
     242:	r3 = *(u64 *)(r10 - 56)
     243:	r5 = r8
     244:	if r0 == 0 goto +645 <LBB0_15>
     245:	r6 = 1
; 		if (name + i + 1 > data_end) {
     246:	r3 = r1
     247:	r3 += 66
     248:	if r3 > r2 goto -202 <LBB0_37>
     249:	r9 = 11
; 		if (*(char *)(name+i) == 0) {
     250:	r7 = *(u8 *)(r1 + 65)
     251:	r3 = *(u64 *)(r10 - 56)
     252:	r5 = r8
     253:	if r7 == 0 goto +1229 <LBB0_13>
; 		if (name + i + 1 > data_end) {
     254:	r3 = r1
     255:	r3 += 67
     256:	if r3 > r2 goto -210 <LBB0_37>
     257:	r3 = *(u64 *)(r10 - 40)
     258:	r3 <<= 8
     259:	r3 += r8
     260:	r0 <<= 16
     261:	r0 += r3
     262:	r7 <<= 24
     263:	r7 += r0
     264:	r3 = r7
     265:	r3 *= -862048943
     266:	r4 = 4294836224 ll
     268:	r3 &= r4
     269:	r7 *= 380141568
     270:	r3 >>= 17
     271:	r3 |= r7
     272:	r3 *= 461845907
     273:	r4 = *(u64 *)(r10 - 56)
     274:	r3 ^= r4
     275:	r4 = 4294443008 ll
     277:	r5 = r3
     278:	r5 &= r4
     279:	r3 <<= 13
     280:	r5 >>= 19
     281:	r3 |= r5
     282:	r3 *= 5
     283:	r3 += -430675100
     284:	r7 = 12
     285:	r4 = 0
; 		if (*(char *)(name+i) == 0) {
     286:	r8 = *(u8 *)(r1 + 66)
     287:	r8 <<= 56
     288:	r8 s>>= 56
     289:	r9 = 0
     290:	r5 = 0
     291:	*(u64 *)(r10 - 40) = r5
     292:	r5 = 0
     293:	if r8 == 0 goto +596 <LBB0_15>
; 		if (name + i + 1 > data_end) {
     294:	r4 = r1
     295:	r4 += 68
     296:	if r4 > r2 goto -250 <LBB0_37>
     297:	r4 = 13
; 		if (*(char *)(name+i) == 0) {
     298:	*(u64 *)(r10 - 48) = r4
     299:	r4 = *(u8 *)(r1 + 67)
     300:	r4 <<= 56
     301:	r4 s>>= 56
     302:	r5 = r8
     303:	*(u64 *)(r10 - 40) = r4
     304:	if r4 == 0 goto +580 <LBB0_14>
; 		if (name + i + 1 > data_end) {
     305:	r5 = r1
     306:	r5 += 69
     307:	if r5 > r2 goto -261 <LBB0_37>
     308:	r7 = 14
     309:	r4 = 1
; 		if (*(char *)(name+i) == 0) {
     310:	r0 = *(u8 *)(r1 + 68)
     311:	r0 <<= 56
     312:	r0 s>>= 56
     313:	r9 = 1
     314:	r5 = r8
     315:	if r0 == 0 goto +574 <LBB0_15>
     316:	r6 = 1
; 		if (name + i + 1 > data_end) {
     317:	r5 = r1
     318:	r5 += 70
     319:	if r5 > r2 goto -273 <LBB0_37>
     320:	r9 = 15
; 		if (*(char *)(name+i) == 0) {
     321:	r7 = *(u8 *)(r1 + 69)
     322:	r5 = r8
     323:	if r7 == 0 goto +1159 <LBB0_13>
; 		if (name + i + 1 > data_end) {
     324:	r5 = r1
     325:	r5 += 71
     326:	if r5 > r2 goto -280 <LBB0_37>
     327:	r4 = *(u64 *)(r10 - 40)
     328:	r4 <<= 8
     329:	r4 += r8
     330:	r0 <<= 16
     331:	r0 += r4
     332:	r7 <<= 24
     333:	r7 += r0
     334:	r5 = r7
     335:	r5 *= -862048943
     336:	r4 = 4294836224 ll
     338:	r5 &= r4
     339:	r7 *= 380141568
     340:	r5 >>= 17
     341:	r5 |= r7
     342:	r5 *= 461845907
     343:	r5 ^= r3
     344:	r3 = 4294443008 ll
     346:	r4 = r5
     347:	r4 &= r3
     348:	r5 <<= 13
     349:	r4 >>= 19
     350:	r5 |= r4
     351:	r5 *= 5
     352:	r5 += -430675100
     353:	r7 = 16
     354:	r4 = 0
; 		if (*(char *)(name+i) == 0) {
     355:	r8 = *(u8 *)(r1 + 70)
     356:	r8 <<= 56
     357:	r8 s>>= 56
     358:	r9 = 0
     359:	*(u64 *)(r10 - 56) = r5
     360:	r3 = r5
     361:	r5 = 0
     362:	*(u64 *)(r10 - 40) = r5
     363:	r5 = 0
; 		if (*(char *)(name+i) == 0) {
     364:	if r8 == 0 goto +525 <LBB0_15>
; 		if (name + i + 1 > data_end) {
     365:	r3 = r1
     366:	r3 += 72
     367:	if r3 > r2 goto -321 <LBB0_37>
     368:	r3 = 17
; 		if (*(char *)(name+i) == 0) {
     369:	*(u64 *)(r10 - 48) = r3
     370:	r4 = *(u8 *)(r1 + 71)
     371:	r4 <<= 56
     372:	r4 s>>= 56
     373:	r3 = *(u64 *)(r10 - 56)
     374:	r5 = r8
     375:	*(u64 *)(r10 - 40) = r4
     376:	if r4 == 0 goto +508 <LBB0_14>
; 		if (name + i + 1 > data_end) {
     377:	r3 = r1
     378:	r3 += 73
     379:	if r3 > r2 goto -333 <LBB0_37>
     380:	r7 = 18
     381:	r4 = 1
; 		if (*(char *)(name+i) == 0) {
     382:	r0 = *(u8 *)(r1 + 72)
     383:	r0 <<= 56
     384:	r0 s>>= 56
     385:	r9 = 1
     386:	r3 = *(u64 *)(r10 - 56)
     387:	r5 = r8
     388:	if r0 == 0 goto +501 <LBB0_15>
     389:	r6 = 1
; 		if (name + i + 1 > data_end) {
     390:	r3 = r1
     391:	r3 += 74
     392:	if r3 > r2 goto -346 <LBB0_37>
     393:	r9 = 19
; 		if (*(char *)(name+i) == 0) {
     394:	r7 = *(u8 *)(r1 + 73)
     395:	r3 = *(u64 *)(r10 - 56)
     396:	r5 = r8
     397:	if r7 == 0 goto +1085 <LBB0_13>
; 		if (name + i + 1 > data_end) {
     398:	r3 = r1
     399:	r3 += 75
     400:	if r3 > r2 goto -354 <LBB0_37>
     401:	r3 = *(u64 *)(r10 - 40)
     402:	r3 <<= 8
     403:	r3 += r8
     404:	r0 <<= 16
     405:	r0 += r3
     406:	r7 <<= 24
     407:	r7 += r0
     408:	r3 = r7
     409:	r3 *= -862048943
     410:	r4 = 4294836224 ll
     412:	r3 &= r4
     413:	r7 *= 380141568
     414:	r3 >>= 17
     415:	r3 |= r7
     416:	r3 *= 461845907
     417:	r4 = *(u64 *)(r10 - 56)
     418:	r3 ^= r4
     419:	r4 = 4294443008 ll
     421:	r5 = r3
     422:	r5 &= r4
     423:	r3 <<= 13
     424:	r5 >>= 19
     425:	r3 |= r5
     426:	r3 *= 5
     427:	r3 += -430675100
     428:	r7 = 20
     429:	r4 = 0
; 		if (*(char *)(name+i) == 0) {
     430:	r8 = *(u8 *)(r1 + 74)
     431:	r8 <<= 56
     432:	r8 s>>= 56
     433:	r9 = 0
     434:	r5 = 0
     435:	*(u64 *)(r10 - 40) = r5
     436:	r5 = 0
     437:	if r8 == 0 goto +452 <LBB0_15>
; 		if (name + i + 1 > data_end) {
     438:	r4 = r1
     439:	r4 += 76
     440:	if r4 > r2 goto -394 <LBB0_37>
     441:	r4 = 21
; 		if (*(char *)(name+i) == 0) {
     442:	*(u64 *)(r10 - 48) = r4
     443:	r4 = *(u8 *)(r1 + 75)
     444:	r4 <<= 56
     445:	r4 s>>= 56
     446:	r5 = r8
     447:	*(u64 *)(r10 - 40) = r4
     448:	if r4 == 0 goto +436 <LBB0_14>
; 		if (name + i + 1 > data_end) {
     449:	r5 = r1
     450:	r5 += 77
     451:	if r5 > r2 goto -405 <LBB0_37>
     452:	r7 = 22
     453:	r4 = 1
; 		if (*(char *)(name+i) == 0) {
     454:	r0 = *(u8 *)(r1 + 76)
     455:	r0 <<= 56
     456:	r0 s>>= 56
     457:	r9 = 1
     458:	r5 = r8
     459:	if r0 == 0 goto +430 <LBB0_15>
     460:	r6 = 1
; 		if (name + i + 1 > data_end) {
     461:	r5 = r1
     462:	r5 += 78
     463:	if r5 > r2 goto -417 <LBB0_37>
     464:	r9 = 23
; 		if (*(char *)(name+i) == 0) {
     465:	r7 = *(u8 *)(r1 + 77)
     466:	r5 = r8
     467:	if r7 == 0 goto +1015 <LBB0_13>
; 		if (name + i + 1 > data_end) {
     468:	r5 = r1
     469:	r5 += 79
     470:	if r5 > r2 goto -424 <LBB0_37>
     471:	r4 = *(u64 *)(r10 - 40)
     472:	r4 <<= 8
     473:	r4 += r8
     474:	r0 <<= 16
     475:	r0 += r4
     476:	r7 <<= 24
     477:	r7 += r0
     478:	r5 = r7
     479:	r5 *= -862048943
     480:	r4 = 4294836224 ll
     482:	r5 &= r4
     483:	r7 *= 380141568
     484:	r5 >>= 17
     485:	r5 |= r7
     486:	r5 *= 461845907
     487:	r5 ^= r3
     488:	r3 = 4294443008 ll
     490:	r4 = r5
     491:	r4 &= r3
     492:	r5 <<= 13
     493:	r4 >>= 19
     494:	r5 |= r4
     495:	r5 *= 5
     496:	r5 += -430675100
     497:	r7 = 24
     498:	r4 = 0
; 		if (*(char *)(name+i) == 0) {
     499:	r8 = *(u8 *)(r1 + 78)
     500:	r8 <<= 56
     501:	r8 s>>= 56
     502:	r9 = 0
     503:	*(u64 *)(r10 - 56) = r5
     504:	r3 = r5
     505:	r5 = 0
     506:	*(u64 *)(r10 - 40) = r5
     507:	r5 = 0
; 		if (*(char *)(name+i) == 0) {
     508:	if r8 == 0 goto +381 <LBB0_15>
; 		if (name + i + 1 > data_end) {
     509:	r3 = r1
     510:	r3 += 80
     511:	if r3 > r2 goto -465 <LBB0_37>
     512:	r3 = 25
; 		if (*(char *)(name+i) == 0) {
     513:	*(u64 *)(r10 - 48) = r3
     514:	r4 = *(u8 *)(r1 + 79)
     515:	r4 <<= 56
     516:	r4 s>>= 56
     517:	r3 = *(u64 *)(r10 - 56)
     518:	r5 = r8
     519:	*(u64 *)(r10 - 40) = r4
     520:	if r4 == 0 goto +364 <LBB0_14>
; 		if (name + i + 1 > data_end) {
     521:	r3 = r1
     522:	r3 += 81
     523:	if r3 > r2 goto -477 <LBB0_37>
     524:	r7 = 26
     525:	r4 = 1
; 		if (*(char *)(name+i) == 0) {
     526:	r0 = *(u8 *)(r1 + 80)
     527:	r0 <<= 56
     528:	r0 s>>= 56
     529:	r9 = 1
     530:	r3 = *(u64 *)(r10 - 56)
     531:	r5 = r8
     532:	if r0 == 0 goto +357 <LBB0_15>
     533:	r6 = 1
; 		if (name + i + 1 > data_end) {
     534:	r3 = r1
     535:	r3 += 82
     536:	if r3 > r2 goto -490 <LBB0_37>
     537:	r9 = 27
; 		if (*(char *)(name+i) == 0) {
     538:	r7 = *(u8 *)(r1 + 81)
     539:	r3 = *(u64 *)(r10 - 56)
     540:	r5 = r8
     541:	if r7 == 0 goto +941 <LBB0_13>
; 		if (name + i + 1 > data_end) {
     542:	r3 = r1
     543:	r3 += 83
     544:	if r3 > r2 goto -498 <LBB0_37>
     545:	r3 = *(u64 *)(r10 - 40)
     546:	r3 <<= 8
     547:	r3 += r8
     548:	r0 <<= 16
     549:	r0 += r3
     550:	r7 <<= 24
     551:	r7 += r0
     552:	r3 = r7
     553:	r3 *= -862048943
     554:	r4 = 4294836224 ll
     556:	r3 &= r4
     557:	r7 *= 380141568
     558:	r3 >>= 17
     559:	r3 |= r7
     560:	r3 *= 461845907
     561:	r4 = *(u64 *)(r10 - 56)
     562:	r3 ^= r4
     563:	r4 = 4294443008 ll
     565:	r5 = r3
     566:	r5 &= r4
     567:	r3 <<= 13
     568:	r5 >>= 19
     569:	r3 |= r5
     570:	r3 *= 5
     571:	r3 += -430675100
     572:	r7 = 28
     573:	r4 = 0
; 		if (*(char *)(name+i) == 0) {
     574:	r8 = *(u8 *)(r1 + 82)
     575:	r8 <<= 56
     576:	r8 s>>= 56
     577:	r9 = 0
     578:	r5 = 0
     579:	*(u64 *)(r10 - 40) = r5
     580:	r5 = 0
     581:	if r8 == 0 goto +308 <LBB0_15>
; 		if (name + i + 1 > data_end) {
     582:	r4 = r1
     583:	r4 += 84
     584:	if r4 > r2 goto -538 <LBB0_37>
     585:	r4 = 29
; 		if (*(char *)(name+i) == 0) {
     586:	*(u64 *)(r10 - 48) = r4
     587:	r4 = *(u8 *)(r1 + 83)
     588:	r4 <<= 56
     589:	r4 s>>= 56
     590:	r5 = r8
     591:	*(u64 *)(r10 - 40) = r4
     592:	if r4 == 0 goto +292 <LBB0_14>
; 		if (name + i + 1 > data_end) {
     593:	r5 = r1
     594:	r5 += 85
     595:	if r5 > r2 goto -549 <LBB0_37>
     596:	r7 = 30
     597:	r4 = 1
; 		if (*(char *)(name+i) == 0) {
     598:	r0 = *(u8 *)(r1 + 84)
     599:	r0 <<= 56
     600:	r0 s>>= 56
     601:	r9 = 1
     602:	r5 = r8
     603:	if r0 == 0 goto +286 <LBB0_15>
     604:	r6 = 1
; 		if (name + i + 1 > data_end) {
     605:	r5 = r1
     606:	r5 += 86
     607:	if r5 > r2 goto -561 <LBB0_37>
     608:	r9 = 31
; 		if (*(char *)(name+i) == 0) {
     609:	r7 = *(u8 *)(r1 + 85)
     610:	r5 = r8
     611:	if r7 == 0 goto +871 <LBB0_13>
; 		if (name + i + 1 > data_end) {
     612:	r5 = r1
     613:	r5 += 87
     614:	if r5 > r2 goto -568 <LBB0_37>
     615:	r4 = *(u64 *)(r10 - 40)
     616:	r4 <<= 8
     617:	r4 += r8
     618:	r0 <<= 16
     619:	r0 += r4
     620:	r7 <<= 24
     621:	r7 += r0
     622:	r5 = r7
     623:	r5 *= -862048943
     624:	r4 = 4294836224 ll
     626:	r5 &= r4
     627:	r7 *= 380141568
     628:	r5 >>= 17
     629:	r5 |= r7
     630:	r5 *= 461845907
     631:	r5 ^= r3
     632:	r3 = 4294443008 ll
     634:	r4 = r5
     635:	r4 &= r3
     636:	r5 <<= 13
     637:	r4 >>= 19
     638:	r5 |= r4
     639:	r5 *= 5
     640:	r5 += -430675100
     641:	r7 = 32
     642:	r4 = 0
; 		if (*(char *)(name+i) == 0) {
     643:	r8 = *(u8 *)(r1 + 86)
     644:	r8 <<= 56
     645:	r8 s>>= 56
     646:	r9 = 0
     647:	*(u64 *)(r10 - 56) = r5
     648:	r3 = r5
     649:	r5 = 0
     650:	*(u64 *)(r10 - 40) = r5
     651:	r5 = 0
; 		if (*(char *)(name+i) == 0) {
     652:	if r8 == 0 goto +237 <LBB0_15>
; 		if (name + i + 1 > data_end) {
     653:	r3 = r1
     654:	r3 += 88
     655:	if r3 > r2 goto -609 <LBB0_37>
     656:	r3 = 33
; 		if (*(char *)(name+i) == 0) {
     657:	*(u64 *)(r10 - 48) = r3
     658:	r4 = *(u8 *)(r1 + 87)
     659:	r4 <<= 56
     660:	r4 s>>= 56
     661:	r3 = *(u64 *)(r10 - 56)
     662:	r5 = r8
     663:	*(u64 *)(r10 - 40) = r4
     664:	if r4 == 0 goto +220 <LBB0_14>
; 		if (name + i + 1 > data_end) {
     665:	r3 = r1
     666:	r3 += 89
     667:	if r3 > r2 goto -621 <LBB0_37>
     668:	r7 = 34
     669:	r4 = 1
; 		if (*(char *)(name+i) == 0) {
     670:	r0 = *(u8 *)(r1 + 88)
     671:	r0 <<= 56
     672:	r0 s>>= 56
     673:	r9 = 1
     674:	r3 = *(u64 *)(r10 - 56)
     675:	r5 = r8
     676:	if r0 == 0 goto +213 <LBB0_15>
     677:	r6 = 1
; 		if (name + i + 1 > data_end) {
     678:	r3 = r1
     679:	r3 += 90
     680:	if r3 > r2 goto -634 <LBB0_37>
     681:	r9 = 35
; 		if (*(char *)(name+i) == 0) {
     682:	r7 = *(u8 *)(r1 + 89)
     683:	r3 = *(u64 *)(r10 - 56)
     684:	r5 = r8
     685:	if r7 == 0 goto +797 <LBB0_13>
; 		if (name + i + 1 > data_end) {
     686:	r3 = r1
     687:	r3 += 91
     688:	if r3 > r2 goto -642 <LBB0_37>
     689:	r3 = *(u64 *)(r10 - 40)
     690:	r3 <<= 8
     691:	r3 += r8
     692:	r0 <<= 16
     693:	r0 += r3
     694:	r7 <<= 24
     695:	r7 += r0
     696:	r3 = r7
     697:	r3 *= -862048943
     698:	r4 = 4294836224 ll
     700:	r3 &= r4
     701:	r7 *= 380141568
     702:	r3 >>= 17
     703:	r3 |= r7
     704:	r3 *= 461845907
     705:	r4 = *(u64 *)(r10 - 56)
     706:	r3 ^= r4
     707:	r4 = 4294443008 ll
     709:	r5 = r3
     710:	r5 &= r4
     711:	r3 <<= 13
     712:	r5 >>= 19
     713:	r3 |= r5
     714:	r3 *= 5
     715:	r3 += -430675100
     716:	r7 = 36
     717:	r4 = 0
; 		if (*(char *)(name+i) == 0) {
     718:	r8 = *(u8 *)(r1 + 90)
     719:	r8 <<= 56
     720:	r8 s>>= 56
     721:	r9 = 0
     722:	r5 = 0
     723:	*(u64 *)(r10 - 40) = r5
     724:	r5 = 0
     725:	if r8 == 0 goto +164 <LBB0_15>
; 		if (name + i + 1 > data_end) {
     726:	r4 = r1
     727:	r4 += 92
     728:	if r4 > r2 goto -682 <LBB0_37>
     729:	r4 = 37
; 		if (*(char *)(name+i) == 0) {
     730:	*(u64 *)(r10 - 48) = r4
     731:	r4 = *(u8 *)(r1 + 91)
     732:	r4 <<= 56
     733:	r4 s>>= 56
     734:	r5 = r8
     735:	*(u64 *)(r10 - 40) = r4
     736:	if r4 == 0 goto +148 <LBB0_14>
; 		if (name + i + 1 > data_end) {
     737:	r5 = r1
     738:	r5 += 93
     739:	if r5 > r2 goto -693 <LBB0_37>
     740:	r7 = 38
     741:	r4 = 1
; 		if (*(char *)(name+i) == 0) {
     742:	r0 = *(u8 *)(r1 + 92)
     743:	r0 <<= 56
     744:	r0 s>>= 56
     745:	r9 = 1
     746:	r5 = r8
     747:	if r0 == 0 goto +142 <LBB0_15>
     748:	r6 = 1
; 		if (name + i + 1 > data_end) {
     749:	r5 = r1
     750:	r5 += 94
     751:	if r5 > r2 goto -705 <LBB0_37>
     752:	r9 = 39
; 		if (*(char *)(name+i) == 0) {
     753:	r7 = *(u8 *)(r1 + 93)
     754:	r5 = r8
     755:	if r7 == 0 goto +727 <LBB0_13>
; 		if (name + i + 1 > data_end) {
     756:	r5 = r1
     757:	r5 += 95
     758:	if r5 > r2 goto -712 <LBB0_37>
     759:	r4 = *(u64 *)(r10 - 40)
     760:	r4 <<= 8
     761:	r4 += r8
     762:	r0 <<= 16
     763:	r0 += r4
     764:	r7 <<= 24
     765:	r7 += r0
     766:	r5 = r7
     767:	r5 *= -862048943
     768:	r4 = 4294836224 ll
     770:	r5 &= r4
     771:	r7 *= 380141568
     772:	r5 >>= 17
     773:	r5 |= r7
     774:	r5 *= 461845907
     775:	r5 ^= r3
     776:	r3 = 4294443008 ll
     778:	r4 = r5
     779:	r4 &= r3
     780:	r5 <<= 13
     781:	r4 >>= 19
     782:	r5 |= r4
     783:	r5 *= 5
     784:	r5 += -430675100
     785:	r7 = 40
     786:	r4 = 0
; 		if (*(char *)(name+i) == 0) {
     787:	r8 = *(u8 *)(r1 + 94)
     788:	r8 <<= 56
     789:	r8 s>>= 56
     790:	r9 = 0
     791:	*(u64 *)(r10 - 56) = r5
     792:	r3 = r5
     793:	r5 = 0
     794:	*(u64 *)(r10 - 40) = r5
     795:	r5 = 0
; 		if (*(char *)(name+i) == 0) {
     796:	if r8 == 0 goto +93 <LBB0_15>
; 		if (name + i + 1 > data_end) {
     797:	r3 = r1
     798:	r3 += 96
     799:	if r3 > r2 goto -753 <LBB0_37>
     800:	r3 = 41
; 		if (*(char *)(name+i) == 0) {
     801:	*(u64 *)(r10 - 48) = r3
     802:	r4 = *(u8 *)(r1 + 95)
     803:	r4 <<= 56
     804:	r4 s>>= 56
     805:	r3 = *(u64 *)(r10 - 56)
     806:	r5 = r8
     807:	*(u64 *)(r10 - 40) = r4
     808:	if r4 == 0 goto +76 <LBB0_14>
; 		if (name + i + 1 > data_end) {
     809:	r3 = r1
     810:	r3 += 97
     811:	if r3 > r2 goto -765 <LBB0_37>
     812:	r7 = 42
     813:	r4 = 1
; 		if (*(char *)(name+i) == 0) {
     814:	r0 = *(u8 *)(r1 + 96)
     815:	r0 <<= 56
     816:	r0 s>>= 56
     817:	r9 = 1
     818:	r3 = *(u64 *)(r10 - 56)
     819:	r5 = r8
     820:	if r0 == 0 goto +69 <LBB0_15>
     821:	r6 = 1
; 		if (name + i + 1 > data_end) {
     822:	r3 = r1
     823:	r3 += 98
     824:	if r3 > r2 goto -778 <LBB0_37>
     825:	r9 = 43
; 		if (*(char *)(name+i) == 0) {
     826:	r7 = *(u8 *)(r1 + 97)
     827:	r3 = *(u64 *)(r10 - 56)
     828:	r5 = r8
     829:	if r7 == 0 goto +653 <LBB0_13>
; 		if (name + i + 1 > data_end) {
     830:	r3 = r1
     831:	r3 += 99
     832:	if r3 > r2 goto -786 <LBB0_37>
     833:	r3 = *(u64 *)(r10 - 40)
     834:	r3 <<= 8
     835:	r3 += r8
     836:	r0 <<= 16
     837:	r0 += r3
     838:	r7 <<= 24
     839:	r7 += r0
     840:	r3 = r7
     841:	r3 *= -862048943
     842:	r4 = 4294836224 ll
     844:	r3 &= r4
     845:	r7 *= 380141568
     846:	r3 >>= 17
     847:	r3 |= r7
     848:	r3 *= 461845907
     849:	r4 = *(u64 *)(r10 - 56)
     850:	r3 ^= r4
     851:	r4 = 4294443008 ll
     853:	r5 = r3
     854:	r5 &= r4
     855:	r3 <<= 13
     856:	r5 >>= 19
     857:	r3 |= r5
     858:	r3 *= 5
     859:	r3 += -430675100
     860:	r7 = 44
     861:	r4 = 0
; 		if (*(char *)(name+i) == 0) {
     862:	r0 = *(u8 *)(r1 + 98)
     863:	r0 <<= 56
     864:	r0 s>>= 56
     865:	r9 = 0
     866:	r5 = 0
     867:	*(u64 *)(r10 - 40) = r5
     868:	r5 = 0
     869:	if r0 == 0 goto +20 <LBB0_15>
; 		if (name + i + 1 > data_end) {
     870:	r4 = r1
     871:	r4 += 100
     872:	if r4 > r2 goto -826 <LBB0_37>
     873:	r7 = 46
     874:	r4 = 1
     875:	r2 = 45
; 		if (*(char *)(name+i) == 0) {
     876:	*(u64 *)(r10 - 48) = r2
     877:	r1 = *(u8 *)(r1 + 99)
     878:	r1 <<= 56
     879:	r1 s>>= 56
     880:	r5 = r0
     881:	r9 = 1
     882:	*(u64 *)(r10 - 40) = r1
     883:	if r1 == 0 goto +1 <LBB0_14>
     884:	goto +5 <LBB0_15>

0000000000001ba8 <LBB0_14>:
     885:	r4 = 0
     886:	r9 = 1
     887:	r7 = *(u64 *)(r10 - 48)
     888:	r1 = 0
; 	if (remains == 1) {
     889:	*(u64 *)(r10 - 40) = r1

0000000000001bd0 <LBB0_15>:
; 	if (remains == 1) {
     890:	if r9 == 0 goto +20 <LBB0_19>
     891:	r0 = 0
     892:	r1 = 0
; 	if (remains == 2) {
     893:	if r4 == 0 goto +3 <LBB0_18>

0000000000001bf0 <LBB0_17>:
     894:	r1 = *(u64 *)(r10 - 40)
; 	if (remains == 2) {
     895:	r1 <<= 8
     896:	r1 &= 65280

0000000000001c08 <LBB0_18>:
; 		k ^= tail0;
     897:	r5 &= 255
; 	if (remains == 2) {
     898:	r5 |= r0
; 		k ^= tail0;
     899:	r5 |= r1
; 		k *=0xcc9e2d51;
     900:	r1 = r5
     901:	r1 *= -862048943
     902:	r2 = 4294836224 ll
; 		k *=0xcc9e2d51;
     904:	r1 &= r2
; 		k = (k << 15) | (k >> 17);
     905:	r5 *= 380141568
     906:	r1 >>= 17
     907:	r1 |= r5
; 		k *= 0x1b873593;
     908:	r1 *= 461845907
; 		h1 ^= k;
     909:	r1 ^= r3
     910:	r3 = r1

0000000000001c78 <LBB0_19>:
; 	h1 ^= i;
     911:	r1 = r3
     912:	r1 ^= r7
     913:	r2 = 4294901760 ll
     915:	r3 &= r2
; 	h1 ^= (h1 >> 16);
     916:	r3 >>= 16
     917:	r3 ^= r1
     918:	r1 = 117
; 	bpf_print("fp:%u",fp);
     919:	*(u16 *)(r10 - 20) = r1
     920:	r1 = 624586854
     921:	*(u32 *)(r10 - 24) = r1
; 	h1 *= 0x85ebca6b;
     922:	r3 *= -2048144789
     923:	r1 = 4294959104 ll
; 	h1 *= 0x85ebca6b;
     925:	r4 = r3
     926:	r4 &= r1
; 	h1 ^= (h1 >> 13);
     927:	r4 >>= 13
     928:	r4 ^= r3
; 	h1 *= 0xc2b2ae35;
     929:	r4 *= -1028477387
     930:	r9 = r4
     931:	r9 &= r2
; 	h1 ^= (h1 >> 16);
     932:	r9 >>= 16
     933:	r9 ^= r4
     934:	r1 = r10
     935:	r1 += -24
; 	bpf_print("fp:%u",fp);
     936:	r3 = r9
     937:	r3 &= 255
     938:	r2 = 6
     939:	call 6
     940:	r6 = 0
; 	__u32 block1 = glbi1/BUCKETS_PER_BLOCK; //should be integer division
     941:	*(u32 *)(r10 - 28) = r6
     942:	r2 = r10
     943:	r2 += -28
; 	block=bpf_map_lookup_elem(&morton_filter,&block1);
     944:	r1 = 0 ll
     946:	call 1
; 	if (!block){
     947:	if r0 == 0 goto -901 <LBB0_37>
     948:	r1 = r9
     949:	r1 &= 63
; 	unsigned short int ota_bit = TestBit(block->bitarray, FSA_ARRAY_END+FCA_ARRAY_END+ota_index);
     950:	r2 = r9
     951:	r2 >>= 3
     952:	r2 &= 1
     953:	r3 = r0
     954:	r3 += r2
     955:	r8 = 0
     956:	r4 = *(u8 *)(r3 + 62)
; 		if (i<lbi1){
     957:	if r1 == 0 goto +4 <LBB0_189>
; 			item = block->bitarray[index/8];
     958:	r8 = *(u8 *)(r0 + 46)
; 			temp_cap =(unsigned int)((item >> (6 - mod)) & 0x03);
     959:	r8 >>= 6
; 		if (i<lbi1){
     960:	if r1 == 1 goto +1 <LBB0_189>
     961:	goto +180 <LBB0_127>

0000000000001e10 <LBB0_189>:
; 	index = FSA_ARRAY_END + lbi1*FCA_BITS;
     962:	r1 <<= 1
     963:	r2 = r1
     964:	r2 += 368
; 	if ((index/8) >= (BLOCKSIZE_BITS/8)){
     965:	r2 >>= 3
; 	item = block->bitarray[(index/8)];
     966:	r3 = r0
     967:	r3 += r2
     968:	r7 = *(u8 *)(r3 + 0)
; 	index = FSA_ARRAY_END + lbi1*FCA_BITS;
     969:	r1 ^= -1
; 	cap = (unsigned int)((item >> (6 - mod)) & 0x03);
     970:	r1 &= 6
     971:	r7 >>= r1
     972:	r7 &= 3
     973:	r8 &= 255
     974:	r1 = r7
     975:	r1 += r8
     976:	r6 = 1
; 		if (bucket_capacities + cap >= NO_FINGERPRINTS){
     977:	if r1 > 45 goto -931 <LBB0_37>
; 		if (buc < cap){
     978:	if r7 == 0 goto +81 <LBB0_195>
     979:	r6 = 1
; 			if (index < BLOCKSIZE_BITS/8 && index >= 0){
     980:	if r8 > 63 goto -934 <LBB0_37>
     981:	r1 = 0
; 				bpf_print("found index:%u",index);
     982:	*(u8 *)(r10 - 10) = r1
     983:	r1 = 29989
     984:	*(u16 *)(r10 - 12) = r1
     985:	r1 = 980968804
     986:	*(u32 *)(r10 - 16) = r1
     987:	r1 = 7955925832448700262 ll
     989:	*(u64 *)(r10 - 24) = r1
     990:	r1 = r10
     991:	r1 += -24
     992:	r2 = 15
     993:	r3 = r8
     994:	*(u64 *)(r10 - 40) = r4
     995:	*(u64 *)(r10 - 48) = r0
     996:	call 6
     997:	r4 = *(u64 *)(r10 - 40)
; 				cand_fp = block->bitarray[index];
     998:	r1 = *(u64 *)(r10 - 48)
     999:	r1 += r8
    1000:	r1 = *(u8 *)(r1 + 0)
; 	__u8 fp = h1&0x000000ff;
    1001:	r2 = r9
    1002:	r2 &= 255
    1003:	r6 = 2
; 			if (cand_fp == fp){
    1004:	if r1 == r2 goto -958 <LBB0_37>
; 		if (buc < cap){
    1005:	if r7 > 1 goto +1 <LBB0_190>
    1006:	goto +53 <LBB0_195>

0000000000001f78 <LBB0_190>:
    1007:	r6 = 1
; 			if (index < BLOCKSIZE_BITS/8 && index >= 0){
    1008:	if r8 > 62 goto -962 <LBB0_37>
    1009:	r6 = r8
    1010:	r6 += 1
    1011:	r1 = 0
; 				bpf_print("found index:%u",index);
    1012:	*(u8 *)(r10 - 10) = r1
    1013:	r1 = 29989
    1014:	*(u16 *)(r10 - 12) = r1
    1015:	r1 = 980968804
    1016:	*(u32 *)(r10 - 16) = r1
    1017:	r1 = 7955925832448700262 ll
    1019:	*(u64 *)(r10 - 24) = r1
    1020:	r1 = r10
    1021:	r1 += -24
; 				bpf_print("found index:%u",index);
    1022:	r2 = 15
    1023:	r3 = r6
    1024:	call 6
    1025:	r5 = *(u64 *)(r10 - 48)
    1026:	r4 = *(u64 *)(r10 - 40)
; 				cand_fp = block->bitarray[index];
    1027:	r1 = r5
    1028:	r1 += r6
    1029:	r1 = *(u8 *)(r1 + 0)
; 	__u8 fp = h1&0x000000ff;
    1030:	r2 = r9
    1031:	r2 &= 255
    1032:	r6 = 2
; 			if (cand_fp == fp){
    1033:	if r1 == r2 goto -987 <LBB0_37>
; 		if (buc < cap){
    1034:	if r7 != 3 goto +25 <LBB0_195>
    1035:	r6 = 1
; 			if (index < BLOCKSIZE_BITS/8 && index >= 0){
    1036:	if r8 > 61 goto -990 <LBB0_37>
    1037:	r8 += 2
    1038:	r1 = 0
; 				bpf_print("found index:%u",index);
    1039:	*(u8 *)(r10 - 10) = r1
    1040:	r1 = 29989
    1041:	*(u16 *)(r10 - 12) = r1
    1042:	r1 = 980968804
    1043:	*(u32 *)(r10 - 16) = r1
    1044:	r1 = 7955925832448700262 ll
    1046:	*(u64 *)(r10 - 24) = r1
    1047:	r1 = r10
    1048:	r1 += -24
; 				bpf_print("found index:%u",index);
    1049:	r2 = 15
    1050:	r3 = r8
    1051:	r6 = r5
    1052:	call 6
    1053:	r4 = *(u64 *)(r10 - 40)
; 				cand_fp = block->bitarray[index];
    1054:	r6 += r8
    1055:	r1 = *(u8 *)(r6 + 0)
; 	__u8 fp = h1&0x000000ff;
    1056:	r2 = r9
    1057:	r2 &= 255
    1058:	r6 = 2
; 			if (cand_fp == fp){
    1059:	if r1 == r2 goto -1013 <LBB0_37>

0000000000002120 <LBB0_195>:
    1060:	r1 = r9
    1061:	r1 ^= -1
    1062:	r1 &= 7
    1063:	r2 = 1
    1064:	r2 <<= r1
    1065:	r2 &= r4
; 	if (found || !ota_bit){
    1066:	if r2 == 0 goto +67 <LBB0_35>
; 	return (BUCKETS_PER_BLOCK + (ft % off_range) )| 1;
    1067:	r8 = r9
    1068:	r8 &= 14
    1069:	r8 |= 65
; 		__u32 hash2 = hash1 + (integer_exp(-1, hash1&1))*offset(fp);
    1070:	r1 = r9
    1071:	r1 &= 1
    1072:	if r1 == 0 goto +1 <LBB0_28>
    1073:	r8 = -r8

0000000000002190 <LBB0_28>:
    1074:	r6 = 0
; 		__u32 block2 = glbi2/BUCKETS_PER_BLOCK;
    1075:	*(u32 *)(r10 - 32) = r6
    1076:	r2 = r10
    1077:	r2 += -32
; 		block = bpf_map_lookup_elem(&morton_filter,&block2);
    1078:	r1 = 0 ll
    1080:	call 1
; 		if (!block){
    1081:	if r0 == 0 goto -1035 <LBB0_37>
    1082:	r8 += r9
    1083:	r8 &= 63
    1084:	r3 = 0
; 			if (i<lbi2) {/* fca bucket index in the block */
    1085:	if r8 == 0 goto +4 <LBB0_258>
; 				item = block->bitarray[in/8];
    1086:	r3 = *(u8 *)(r0 + 46)
; 				temp_cap = (unsigned int)(item >> (6 - mod)) & 0x03;
    1087:	r3 >>= 6
; 			if (i<lbi2) {/* fca bucket index in the block */
    1088:	if r8 == 1 goto +1 <LBB0_258>
    1089:	goto +397 <LBB0_196>

0000000000002210 <LBB0_258>:
; 		in = FSA_ARRAY_END + lbi2*FCA_BITS;
    1090:	r8 <<= 1
    1091:	r1 = r8
    1092:	r1 += 368
; 		item = block->bitarray[(in/8)];
    1093:	r1 >>= 3
    1094:	r2 = r0
    1095:	r2 += r1
    1096:	r7 = *(u8 *)(r2 + 0)
; 		in = FSA_ARRAY_END + lbi2*FCA_BITS;
    1097:	r8 ^= -1
; 		cap = (item >> (6 - mod)) & 0x03;
    1098:	r8 &= 6
    1099:	r7 >>= r8
    1100:	r6 = 1
    1101:	r7 &= 3
    1102:	*(u64 *)(r10 - 40) = r3
    1103:	r8 = r3
    1104:	r8 &= 255
    1105:	r1 = r7
    1106:	r1 += r8
; 			if (bucket_capacities + cap >= NO_FINGERPRINTS){
    1107:	if r1 > 45 goto -1061 <LBB0_37>
    1108:	*(u64 *)(r10 - 48) = r0
; 			if (buc < cap){
    1109:	if r7 == 0 goto +24 <LBB0_35>
; 				if (in < BLOCKSIZE_BITS/8 && in >= 0){
    1110:	r3 = *(u64 *)(r10 - 40)
    1111:	r3 &= 255
    1112:	r4 = *(u64 *)(r10 - 48)
    1113:	if r3 > 63 goto -1067 <LBB0_37>
    1114:	r1 = 0
; 					bpf_print("found index:%u",in);
    1115:	*(u8 *)(r10 - 10) = r1
    1116:	r1 = 29989
    1117:	*(u16 *)(r10 - 12) = r1
    1118:	r1 = 980968804
    1119:	*(u32 *)(r10 - 16) = r1
    1120:	r1 = 7955925832448700262 ll
    1122:	*(u64 *)(r10 - 24) = r1
    1123:	r1 = r10
    1124:	r1 += -24
    1125:	r2 = 15
    1126:	call 6
; 					cand_fp = block->bitarray[in];
    1127:	r1 = *(u64 *)(r10 - 48)
    1128:	r1 += r8
    1129:	r1 = *(u8 *)(r1 + 0)
; 	__u8 fp = h1&0x000000ff;
    1130:	r2 = r9
    1131:	r2 &= 255
; 				if (cand_fp == fp){
    1132:	if r1 == r2 goto +1 <LBB0_35>
    1133:	if r7 > 1 goto +694 <LBB0_259>

0000000000002370 <LBB0_35>:
    1134:	r1 = 28554821303361894 ll
; 	bpf_print("failure");
    1136:	*(u64 *)(r10 - 24) = r1
    1137:	r1 = r10
    1138:	r1 += -24
; 	bpf_print("failure");
    1139:	r2 = 8
    1140:	call 6
    1141:	goto -1096 <LBB0_36>

00000000000023b0 <LBB0_127>:
; 			item = block->bitarray[index/8];
    1142:	r2 = *(u8 *)(r0 + 46)
; 			temp_cap =(unsigned int)((item >> (6 - mod)) & 0x03);
    1143:	r2 >>= 4
; 			bucket_capacities += temp_cap;	
    1144:	r2 &= 3
    1145:	r2 += r8
    1146:	r3 = 3
    1147:	r8 = r2
; 		if (i<lbi1){
    1148:	if r3 > r1 goto -187 <LBB0_189>
; 			item = block->bitarray[index/8];
    1149:	r8 = *(u8 *)(r0 + 46)
; 			temp_cap =(unsigned int)((item >> (6 - mod)) & 0x03);
    1150:	r8 >>= 2
; 			bucket_capacities += temp_cap;	
    1151:	r8 &= 3
    1152:	r8 += r2
; 		if (i<lbi1){
    1153:	if r1 == 3 goto -192 <LBB0_189>
; 			item = block->bitarray[index/8];
    1154:	r2 = *(u8 *)(r0 + 46)
; 			bucket_capacities += temp_cap;	
    1155:	r2 &= 3
    1156:	r2 += r8
    1157:	r3 = 5
    1158:	r8 = r2
; 		if (i<lbi1){
    1159:	if r3 > r1 goto -198 <LBB0_189>
; 			item = block->bitarray[index/8];
    1160:	r8 = *(u8 *)(r0 + 47)
; 			temp_cap =(unsigned int)((item >> (6 - mod)) & 0x03);
    1161:	r8 >>= 6
; 			bucket_capacities += temp_cap;	
    1162:	r8 += r2
; 		if (i<lbi1){
    1163:	if r1 == 5 goto -202 <LBB0_189>
; 			item = block->bitarray[index/8];
    1164:	r2 = *(u8 *)(r0 + 47)
; 			temp_cap =(unsigned int)((item >> (6 - mod)) & 0x03);
    1165:	r2 >>= 4
; 			bucket_capacities += temp_cap;	
    1166:	r2 &= 3
    1167:	r2 += r8
    1168:	r3 = 7
    1169:	r8 = r2
; 		if (i<lbi1){
    1170:	if r3 > r1 goto -209 <LBB0_189>
; 			item = block->bitarray[index/8];
    1171:	r8 = *(u8 *)(r0 + 47)
; 			temp_cap =(unsigned int)((item >> (6 - mod)) & 0x03);
    1172:	r8 >>= 2
; 			bucket_capacities += temp_cap;	
    1173:	r8 &= 3
    1174:	r8 += r2
; 		if (i<lbi1){
    1175:	if r1 == 7 goto -214 <LBB0_189>
; 			item = block->bitarray[index/8];
    1176:	r2 = *(u8 *)(r0 + 47)
; 			bucket_capacities += temp_cap;	
    1177:	r2 &= 3
    1178:	r2 += r8
    1179:	r3 = 9
    1180:	r8 = r2
; 		if (i<lbi1){
    1181:	if r3 > r1 goto -220 <LBB0_189>
; 			item = block->bitarray[index/8];
    1182:	r8 = *(u8 *)(r0 + 48)
; 			temp_cap =(unsigned int)((item >> (6 - mod)) & 0x03);
    1183:	r8 >>= 6
; 			bucket_capacities += temp_cap;	
    1184:	r8 += r2
; 		if (i<lbi1){
    1185:	if r1 == 9 goto -224 <LBB0_189>
; 			item = block->bitarray[index/8];
    1186:	r2 = *(u8 *)(r0 + 48)
; 			temp_cap =(unsigned int)((item >> (6 - mod)) & 0x03);
    1187:	r2 >>= 4
; 			bucket_capacities += temp_cap;	
    1188:	r2 &= 3
    1189:	r2 += r8
    1190:	r3 = 11
    1191:	r8 = r2
; 		if (i<lbi1){
    1192:	if r3 > r1 goto -231 <LBB0_189>
; 			item = block->bitarray[index/8];
    1193:	r8 = *(u8 *)(r0 + 48)
; 			temp_cap =(unsigned int)((item >> (6 - mod)) & 0x03);
    1194:	r8 >>= 2
; 			bucket_capacities += temp_cap;	
    1195:	r8 &= 3
    1196:	r8 += r2
; 		if (i<lbi1){
    1197:	if r1 == 11 goto -236 <LBB0_189>
; 			item = block->bitarray[index/8];
    1198:	r2 = *(u8 *)(r0 + 48)
; 			bucket_capacities += temp_cap;	
    1199:	r2 &= 3
    1200:	r2 += r8
    1201:	r3 = 13
    1202:	r8 = r2
; 		if (i<lbi1){
    1203:	if r3 > r1 goto -242 <LBB0_189>
; 			item = block->bitarray[index/8];
    1204:	r8 = *(u8 *)(r0 + 49)
; 			temp_cap =(unsigned int)((item >> (6 - mod)) & 0x03);
    1205:	r8 >>= 6
; 			bucket_capacities += temp_cap;	
    1206:	r8 += r2
; 		if (i<lbi1){
    1207:	if r1 == 13 goto -246 <LBB0_189>
; 			item = block->bitarray[index/8];
    1208:	r2 = *(u8 *)(r0 + 49)
; 			temp_cap =(unsigned int)((item >> (6 - mod)) & 0x03);
    1209:	r2 >>= 4
; 			bucket_capacities += temp_cap;	
    1210:	r2 &= 3
    1211:	r2 += r8
    1212:	r3 = 15
    1213:	r8 = r2
; 		if (i<lbi1){
    1214:	if r3 > r1 goto -253 <LBB0_189>
; 			item = block->bitarray[index/8];
    1215:	r8 = *(u8 *)(r0 + 49)
; 			temp_cap =(unsigned int)((item >> (6 - mod)) & 0x03);
    1216:	r8 >>= 2
; 			bucket_capacities += temp_cap;	
    1217:	r8 &= 3
    1218:	r8 += r2
; 		if (i<lbi1){
    1219:	if r1 == 15 goto -258 <LBB0_189>
; 			item = block->bitarray[index/8];
    1220:	r2 = *(u8 *)(r0 + 49)
; 			bucket_capacities += temp_cap;	
    1221:	r2 &= 3
    1222:	r2 += r8
    1223:	r3 = 17
    1224:	r8 = r2
; 		if (i<lbi1){
    1225:	if r3 > r1 goto -264 <LBB0_189>
; 			item = block->bitarray[index/8];
    1226:	r8 = *(u8 *)(r0 + 50)
; 			temp_cap =(unsigned int)((item >> (6 - mod)) & 0x03);
    1227:	r8 >>= 6
; 			bucket_capacities += temp_cap;	
    1228:	r8 += r2
; 		if (i<lbi1){
    1229:	if r1 == 17 goto -268 <LBB0_189>
; 			item = block->bitarray[index/8];
    1230:	r2 = *(u8 *)(r0 + 50)
; 			temp_cap =(unsigned int)((item >> (6 - mod)) & 0x03);
    1231:	r2 >>= 4
; 			bucket_capacities += temp_cap;	
    1232:	r2 &= 3
    1233:	r2 += r8
    1234:	r3 = 19
    1235:	r8 = r2
; 		if (i<lbi1){
    1236:	if r3 > r1 goto -275 <LBB0_189>
; 			item = block->bitarray[index/8];
    1237:	r8 = *(u8 *)(r0 + 50)
; 			temp_cap =(unsigned int)((item >> (6 - mod)) & 0x03);
    1238:	r8 >>= 2
; 			bucket_capacities += temp_cap;	
    1239:	r8 &= 3
    1240:	r8 += r2
; 		if (i<lbi1){
    1241:	if r1 == 19 goto -280 <LBB0_189>
; 			item = block->bitarray[index/8];
    1242:	r2 = *(u8 *)(r0 + 50)
; 			bucket_capacities += temp_cap;	
    1243:	r2 &= 3
    1244:	r2 += r8
    1245:	r3 = 21
    1246:	r8 = r2
; 		if (i<lbi1){
    1247:	if r3 > r1 goto -286 <LBB0_189>
; 			item = block->bitarray[index/8];
    1248:	r8 = *(u8 *)(r0 + 51)
; 			temp_cap =(unsigned int)((item >> (6 - mod)) & 0x03);
    1249:	r8 >>= 6
; 			bucket_capacities += temp_cap;	
    1250:	r8 += r2
; 		if (i<lbi1){
    1251:	if r1 == 21 goto -290 <LBB0_189>
; 			item = block->bitarray[index/8];
    1252:	r2 = *(u8 *)(r0 + 51)
; 			temp_cap =(unsigned int)((item >> (6 - mod)) & 0x03);
    1253:	r2 >>= 4
; 			bucket_capacities += temp_cap;	
    1254:	r2 &= 3
    1255:	r2 += r8
    1256:	r3 = 23
    1257:	r8 = r2
; 		if (i<lbi1){
    1258:	if r3 > r1 goto -297 <LBB0_189>
; 			item = block->bitarray[index/8];
    1259:	r8 = *(u8 *)(r0 + 51)
; 			temp_cap =(unsigned int)((item >> (6 - mod)) & 0x03);
    1260:	r8 >>= 2
; 			bucket_capacities += temp_cap;	
    1261:	r8 &= 3
    1262:	r8 += r2
; 		if (i<lbi1){
    1263:	if r1 == 23 goto -302 <LBB0_189>
; 			item = block->bitarray[index/8];
    1264:	r2 = *(u8 *)(r0 + 51)
; 			bucket_capacities += temp_cap;	
    1265:	r2 &= 3
    1266:	r2 += r8
    1267:	r3 = 25
    1268:	r8 = r2
; 		if (i<lbi1){
    1269:	if r3 > r1 goto -308 <LBB0_189>
; 			item = block->bitarray[index/8];
    1270:	r8 = *(u8 *)(r0 + 52)
; 			temp_cap =(unsigned int)((item >> (6 - mod)) & 0x03);
    1271:	r8 >>= 6
; 			bucket_capacities += temp_cap;	
    1272:	r8 += r2
; 		if (i<lbi1){
    1273:	if r1 == 25 goto -312 <LBB0_189>
; 			item = block->bitarray[index/8];
    1274:	r2 = *(u8 *)(r0 + 52)
; 			temp_cap =(unsigned int)((item >> (6 - mod)) & 0x03);
    1275:	r2 >>= 4
; 			bucket_capacities += temp_cap;	
    1276:	r2 &= 3
    1277:	r2 += r8
    1278:	r3 = 27
    1279:	r8 = r2
; 		if (i<lbi1){
    1280:	if r3 > r1 goto -319 <LBB0_189>
; 			item = block->bitarray[index/8];
    1281:	r8 = *(u8 *)(r0 + 52)
; 			temp_cap =(unsigned int)((item >> (6 - mod)) & 0x03);
    1282:	r8 >>= 2
; 			bucket_capacities += temp_cap;	
    1283:	r8 &= 3
    1284:	r8 += r2
; 		if (i<lbi1){
    1285:	if r1 == 27 goto -324 <LBB0_189>
; 			item = block->bitarray[index/8];
    1286:	r2 = *(u8 *)(r0 + 52)
; 			bucket_capacities += temp_cap;	
    1287:	r2 &= 3
    1288:	r2 += r8
    1289:	r3 = 29
    1290:	r8 = r2
; 		if (i<lbi1){
    1291:	if r3 > r1 goto -330 <LBB0_189>
; 			item = block->bitarray[index/8];
    1292:	r8 = *(u8 *)(r0 + 53)
; 			temp_cap =(unsigned int)((item >> (6 - mod)) & 0x03);
    1293:	r8 >>= 6
; 			bucket_capacities += temp_cap;	
    1294:	r8 += r2
; 		if (i<lbi1){
    1295:	if r1 == 29 goto -334 <LBB0_189>
; 			item = block->bitarray[index/8];
    1296:	r2 = *(u8 *)(r0 + 53)
; 			temp_cap =(unsigned int)((item >> (6 - mod)) & 0x03);
    1297:	r2 >>= 4
; 			bucket_capacities += temp_cap;	
    1298:	r2 &= 3
    1299:	r2 += r8
    1300:	r3 = 31
    1301:	r8 = r2
; 		if (i<lbi1){
    1302:	if r3 > r1 goto -341 <LBB0_189>
; 			item = block->bitarray[index/8];
    1303:	r8 = *(u8 *)(r0 + 53)
; 			temp_cap =(unsigned int)((item >> (6 - mod)) & 0x03);
    1304:	r8 >>= 2
; 			bucket_capacities += temp_cap;	
    1305:	r8 &= 3
    1306:	r8 += r2
; 		if (i<lbi1){
    1307:	if r1 == 31 goto -346 <LBB0_189>
; 			item = block->bitarray[index/8];
    1308:	r2 = *(u8 *)(r0 + 53)
; 			bucket_capacities += temp_cap;	
    1309:	r2 &= 3
    1310:	r2 += r8
    1311:	r3 = 33
    1312:	r8 = r2
; 		if (i<lbi1){
    1313:	if r3 > r1 goto -352 <LBB0_189>
; 			item = block->bitarray[index/8];
    1314:	r8 = *(u8 *)(r0 + 54)
; 			temp_cap =(unsigned int)((item >> (6 - mod)) & 0x03);
    1315:	r8 >>= 6
; 			bucket_capacities += temp_cap;	
    1316:	r8 += r2
; 		if (i<lbi1){
    1317:	if r1 == 33 goto -356 <LBB0_189>
; 			item = block->bitarray[index/8];
    1318:	r2 = *(u8 *)(r0 + 54)
; 			temp_cap =(unsigned int)((item >> (6 - mod)) & 0x03);
    1319:	r2 >>= 4
; 			bucket_capacities += temp_cap;	
    1320:	r2 &= 3
    1321:	r2 += r8
    1322:	r3 = 35
    1323:	r8 = r2
; 		if (i<lbi1){
    1324:	if r3 > r1 goto -363 <LBB0_189>
; 			item = block->bitarray[index/8];
    1325:	r8 = *(u8 *)(r0 + 54)
; 			temp_cap =(unsigned int)((item >> (6 - mod)) & 0x03);
    1326:	r8 >>= 2
; 			bucket_capacities += temp_cap;	
    1327:	r8 &= 3
    1328:	r8 += r2
; 		if (i<lbi1){
    1329:	if r1 == 35 goto -368 <LBB0_189>
; 			item = block->bitarray[index/8];
    1330:	r2 = *(u8 *)(r0 + 54)
; 			bucket_capacities += temp_cap;	
    1331:	r2 &= 3
    1332:	r2 += r8
    1333:	r3 = 37
    1334:	r8 = r2
; 		if (i<lbi1){
    1335:	if r3 > r1 goto -374 <LBB0_189>
; 			item = block->bitarray[index/8];
    1336:	r8 = *(u8 *)(r0 + 55)
; 			temp_cap =(unsigned int)((item >> (6 - mod)) & 0x03);
    1337:	r8 >>= 6
; 			bucket_capacities += temp_cap;	
    1338:	r8 += r2
; 		if (i<lbi1){
    1339:	if r1 == 37 goto -378 <LBB0_189>
; 			item = block->bitarray[index/8];
    1340:	r2 = *(u8 *)(r0 + 55)
; 			temp_cap =(unsigned int)((item >> (6 - mod)) & 0x03);
    1341:	r2 >>= 4
; 			bucket_capacities += temp_cap;	
    1342:	r2 &= 3
    1343:	r2 += r8
    1344:	r3 = 39
    1345:	r8 = r2
; 		if (i<lbi1){
    1346:	if r3 > r1 goto -385 <LBB0_189>
; 			item = block->bitarray[index/8];
    1347:	r8 = *(u8 *)(r0 + 55)
; 			temp_cap =(unsigned int)((item >> (6 - mod)) & 0x03);
    1348:	r8 >>= 2
; 			bucket_capacities += temp_cap;	
    1349:	r8 &= 3
    1350:	r8 += r2
; 		if (i<lbi1){
    1351:	if r1 == 39 goto -390 <LBB0_189>
; 			item = block->bitarray[index/8];
    1352:	r2 = *(u8 *)(r0 + 55)
; 			bucket_capacities += temp_cap;	
    1353:	r2 &= 3
    1354:	r2 += r8
    1355:	r3 = 41
    1356:	r8 = r2
; 		if (i<lbi1){
    1357:	if r3 > r1 goto -396 <LBB0_189>
; 			item = block->bitarray[index/8];
    1358:	r8 = *(u8 *)(r0 + 56)
; 			temp_cap =(unsigned int)((item >> (6 - mod)) & 0x03);
    1359:	r8 >>= 6
; 			bucket_capacities += temp_cap;	
    1360:	r8 += r2
; 		if (i<lbi1){
    1361:	if r1 == 41 goto -400 <LBB0_189>
; 			item = block->bitarray[index/8];
    1362:	r2 = *(u8 *)(r0 + 56)
; 			temp_cap =(unsigned int)((item >> (6 - mod)) & 0x03);
    1363:	r2 >>= 4
; 			bucket_capacities += temp_cap;	
    1364:	r2 &= 3
    1365:	r2 += r8
    1366:	r3 = 43
    1367:	r8 = r2
; 		if (i<lbi1){
    1368:	if r3 > r1 goto -407 <LBB0_189>
; 			item = block->bitarray[index/8];
    1369:	r8 = *(u8 *)(r0 + 56)
; 			temp_cap =(unsigned int)((item >> (6 - mod)) & 0x03);
    1370:	r8 >>= 2
; 			bucket_capacities += temp_cap;	
    1371:	r8 &= 3
    1372:	r8 += r2
; 		if (i<lbi1){
    1373:	if r1 == 43 goto -412 <LBB0_189>
; 			item = block->bitarray[index/8];
    1374:	r2 = *(u8 *)(r0 + 56)
; 			bucket_capacities += temp_cap;	
    1375:	r2 &= 3
    1376:	r2 += r8
    1377:	r3 = 45
    1378:	r8 = r2
; 		if (i<lbi1){
    1379:	if r3 > r1 goto -418 <LBB0_189>
; 			item = block->bitarray[index/8];
    1380:	r8 = *(u8 *)(r0 + 57)
; 			temp_cap =(unsigned int)((item >> (6 - mod)) & 0x03);
    1381:	r8 >>= 6
; 			bucket_capacities += temp_cap;	
    1382:	r8 += r2
; 		if (i<lbi1){
    1383:	if r1 == 45 goto -422 <LBB0_189>
; 			item = block->bitarray[index/8];
    1384:	r2 = *(u8 *)(r0 + 57)
; 			temp_cap =(unsigned int)((item >> (6 - mod)) & 0x03);
    1385:	r2 >>= 4
; 			bucket_capacities += temp_cap;	
    1386:	r2 &= 3
    1387:	r2 += r8
    1388:	r3 = 47
    1389:	r8 = r2
; 		if (i<lbi1){
    1390:	if r3 > r1 goto -429 <LBB0_189>
; 			item = block->bitarray[index/8];
    1391:	r8 = *(u8 *)(r0 + 57)
; 			temp_cap =(unsigned int)((item >> (6 - mod)) & 0x03);
    1392:	r8 >>= 2
; 			bucket_capacities += temp_cap;	
    1393:	r8 &= 3
    1394:	r8 += r2
; 		if (i<lbi1){
    1395:	if r1 == 47 goto -434 <LBB0_189>
; 			item = block->bitarray[index/8];
    1396:	r2 = *(u8 *)(r0 + 57)
; 			bucket_capacities += temp_cap;	
    1397:	r2 &= 3
    1398:	r2 += r8
    1399:	r3 = 49
    1400:	r8 = r2
; 		if (i<lbi1){
    1401:	if r3 > r1 goto -440 <LBB0_189>
; 			item = block->bitarray[index/8];
    1402:	r8 = *(u8 *)(r0 + 58)
; 			temp_cap =(unsigned int)((item >> (6 - mod)) & 0x03);
    1403:	r8 >>= 6
; 			bucket_capacities += temp_cap;	
    1404:	r8 += r2
; 		if (i<lbi1){
    1405:	if r1 == 49 goto -444 <LBB0_189>
; 			item = block->bitarray[index/8];
    1406:	r2 = *(u8 *)(r0 + 58)
; 			temp_cap =(unsigned int)((item >> (6 - mod)) & 0x03);
    1407:	r2 >>= 4
; 			bucket_capacities += temp_cap;	
    1408:	r2 &= 3
    1409:	r2 += r8
    1410:	r3 = 51
    1411:	r8 = r2
; 		if (i<lbi1){
    1412:	if r3 > r1 goto -451 <LBB0_189>
; 			item = block->bitarray[index/8];
    1413:	r8 = *(u8 *)(r0 + 58)
; 			temp_cap =(unsigned int)((item >> (6 - mod)) & 0x03);
    1414:	r8 >>= 2
; 			bucket_capacities += temp_cap;	
    1415:	r8 &= 3
    1416:	r8 += r2
; 		if (i<lbi1){
    1417:	if r1 == 51 goto -456 <LBB0_189>
; 			item = block->bitarray[index/8];
    1418:	r2 = *(u8 *)(r0 + 58)
; 			bucket_capacities += temp_cap;	
    1419:	r2 &= 3
    1420:	r2 += r8
    1421:	r3 = 53
    1422:	r8 = r2
; 		if (i<lbi1){
    1423:	if r3 > r1 goto -462 <LBB0_189>
; 			item = block->bitarray[index/8];
    1424:	r8 = *(u8 *)(r0 + 59)
; 			temp_cap =(unsigned int)((item >> (6 - mod)) & 0x03);
    1425:	r8 >>= 6
; 			bucket_capacities += temp_cap;	
    1426:	r8 += r2
; 		if (i<lbi1){
    1427:	if r1 == 53 goto -466 <LBB0_189>
; 			item = block->bitarray[index/8];
    1428:	r2 = *(u8 *)(r0 + 59)
; 			temp_cap =(unsigned int)((item >> (6 - mod)) & 0x03);
    1429:	r2 >>= 4
; 			bucket_capacities += temp_cap;	
    1430:	r2 &= 3
    1431:	r2 += r8
    1432:	r3 = 55
    1433:	r8 = r2
; 		if (i<lbi1){
    1434:	if r3 > r1 goto -473 <LBB0_189>
; 			item = block->bitarray[index/8];
    1435:	r8 = *(u8 *)(r0 + 59)
; 			temp_cap =(unsigned int)((item >> (6 - mod)) & 0x03);
    1436:	r8 >>= 2
; 			bucket_capacities += temp_cap;	
    1437:	r8 &= 3
    1438:	r8 += r2
; 		if (i<lbi1){
    1439:	if r1 == 55 goto -478 <LBB0_189>
; 			item = block->bitarray[index/8];
    1440:	r2 = *(u8 *)(r0 + 59)
; 			bucket_capacities += temp_cap;	
    1441:	r2 &= 3
    1442:	r2 += r8
    1443:	r3 = 57
    1444:	r8 = r2
; 		if (i<lbi1){
    1445:	if r3 > r1 goto -484 <LBB0_189>
; 			item = block->bitarray[index/8];
    1446:	r8 = *(u8 *)(r0 + 60)
; 			temp_cap =(unsigned int)((item >> (6 - mod)) & 0x03);
    1447:	r8 >>= 6
; 			bucket_capacities += temp_cap;	
    1448:	r8 += r2
; 		if (i<lbi1){
    1449:	if r1 == 57 goto -488 <LBB0_189>
; 			item = block->bitarray[index/8];
    1450:	r2 = *(u8 *)(r0 + 60)
; 			temp_cap =(unsigned int)((item >> (6 - mod)) & 0x03);
    1451:	r2 >>= 4
; 			bucket_capacities += temp_cap;	
    1452:	r2 &= 3
    1453:	r2 += r8
    1454:	r3 = 59
    1455:	r8 = r2
; 		if (i<lbi1){
    1456:	if r3 > r1 goto -495 <LBB0_189>
; 			item = block->bitarray[index/8];
    1457:	r8 = *(u8 *)(r0 + 60)
; 			temp_cap =(unsigned int)((item >> (6 - mod)) & 0x03);
    1458:	r8 >>= 2
; 			bucket_capacities += temp_cap;	
    1459:	r8 &= 3
    1460:	r8 += r2
; 		if (i<lbi1){
    1461:	if r1 == 59 goto -500 <LBB0_189>
; 			item = block->bitarray[index/8];
    1462:	r2 = *(u8 *)(r0 + 60)
; 			bucket_capacities += temp_cap;	
    1463:	r2 &= 3
    1464:	r2 += r8
    1465:	r3 = 61
    1466:	r8 = r2
; 		if (i<lbi1){
    1467:	if r3 > r1 goto -506 <LBB0_189>
; 			item = block->bitarray[index/8];
    1468:	r8 = *(u8 *)(r0 + 61)
; 			temp_cap =(unsigned int)((item >> (6 - mod)) & 0x03);
    1469:	r8 >>= 6
; 			bucket_capacities += temp_cap;	
    1470:	r8 += r2
; 		if (i<lbi1){
    1471:	if r1 == 61 goto -510 <LBB0_189>
; 			item = block->bitarray[index/8];
    1472:	r2 = *(u8 *)(r0 + 61)
; 			temp_cap =(unsigned int)((item >> (6 - mod)) & 0x03);
    1473:	r2 >>= 4
; 			bucket_capacities += temp_cap;	
    1474:	r2 &= 3
    1475:	r2 += r8
    1476:	r8 = r2
; 		if (i<lbi1){
    1477:	if r1 != 63 goto -516 <LBB0_189>
; 			item = block->bitarray[index/8];
    1478:	r8 = *(u8 *)(r0 + 61)
; 			temp_cap =(unsigned int)((item >> (6 - mod)) & 0x03);
    1479:	r8 >>= 2
; 			bucket_capacities += temp_cap;	
    1480:	r8 &= 3
    1481:	r8 += r2
    1482:	goto -521 <LBB0_189>

0000000000002e58 <LBB0_13>:
; 	if (remains == 3) {
    1483:	r0 <<= 16
    1484:	r0 &= 16711680
    1485:	r7 = r9
    1486:	goto -593 <LBB0_17>

0000000000002e78 <LBB0_196>:
; 				item = block->bitarray[in/8];
    1487:	r1 = *(u8 *)(r0 + 46)
; 				temp_cap = (unsigned int)(item >> (6 - mod)) & 0x03;
    1488:	r1 >>= 4
; 				bucket_capacities += temp_cap;
    1489:	r1 &= 3
    1490:	r1 += r3
    1491:	r2 = 3
    1492:	r3 = r1
; 			if (i<lbi2) {/* fca bucket index in the block */
    1493:	if r2 > r8 goto -404 <LBB0_258>
; 				item = block->bitarray[in/8];
    1494:	r3 = *(u8 *)(r0 + 46)
; 				temp_cap = (unsigned int)(item >> (6 - mod)) & 0x03;
    1495:	r3 >>= 2
; 				bucket_capacities += temp_cap;
    1496:	r3 &= 3
    1497:	r3 += r1
; 			if (i<lbi2) {/* fca bucket index in the block */
    1498:	if r8 == 3 goto -409 <LBB0_258>
; 				item = block->bitarray[in/8];
    1499:	r1 = *(u8 *)(r0 + 46)
; 				bucket_capacities += temp_cap;
    1500:	r1 &= 3
    1501:	r1 += r3
    1502:	r2 = 5
    1503:	r3 = r1
; 			if (i<lbi2) {/* fca bucket index in the block */
    1504:	if r2 > r8 goto -415 <LBB0_258>
; 				item = block->bitarray[in/8];
    1505:	r3 = *(u8 *)(r0 + 47)
; 				temp_cap = (unsigned int)(item >> (6 - mod)) & 0x03;
    1506:	r3 >>= 6
; 				bucket_capacities += temp_cap;
    1507:	r3 += r1
; 			if (i<lbi2) {/* fca bucket index in the block */
    1508:	if r8 == 5 goto -419 <LBB0_258>
; 				item = block->bitarray[in/8];
    1509:	r1 = *(u8 *)(r0 + 47)
; 				temp_cap = (unsigned int)(item >> (6 - mod)) & 0x03;
    1510:	r1 >>= 4
; 				bucket_capacities += temp_cap;
    1511:	r1 &= 3
    1512:	r1 += r3
    1513:	r2 = 7
    1514:	r3 = r1
; 			if (i<lbi2) {/* fca bucket index in the block */
    1515:	if r2 > r8 goto -426 <LBB0_258>
; 				item = block->bitarray[in/8];
    1516:	r3 = *(u8 *)(r0 + 47)
; 				temp_cap = (unsigned int)(item >> (6 - mod)) & 0x03;
    1517:	r3 >>= 2
; 				bucket_capacities += temp_cap;
    1518:	r3 &= 3
    1519:	r3 += r1
; 			if (i<lbi2) {/* fca bucket index in the block */
    1520:	if r8 == 7 goto -431 <LBB0_258>
; 				item = block->bitarray[in/8];
    1521:	r1 = *(u8 *)(r0 + 47)
; 				bucket_capacities += temp_cap;
    1522:	r1 &= 3
    1523:	r1 += r3
    1524:	r2 = 9
    1525:	r3 = r1
; 			if (i<lbi2) {/* fca bucket index in the block */
    1526:	if r2 > r8 goto -437 <LBB0_258>
; 				item = block->bitarray[in/8];
    1527:	r3 = *(u8 *)(r0 + 48)
; 				temp_cap = (unsigned int)(item >> (6 - mod)) & 0x03;
    1528:	r3 >>= 6
; 				bucket_capacities += temp_cap;
    1529:	r3 += r1
; 			if (i<lbi2) {/* fca bucket index in the block */
    1530:	if r8 == 9 goto -441 <LBB0_258>
; 				item = block->bitarray[in/8];
    1531:	r1 = *(u8 *)(r0 + 48)
; 				temp_cap = (unsigned int)(item >> (6 - mod)) & 0x03;
    1532:	r1 >>= 4
; 				bucket_capacities += temp_cap;
    1533:	r1 &= 3
    1534:	r1 += r3
    1535:	r2 = 11
    1536:	r3 = r1
; 			if (i<lbi2) {/* fca bucket index in the block */
    1537:	if r2 > r8 goto -448 <LBB0_258>
; 				item = block->bitarray[in/8];
    1538:	r3 = *(u8 *)(r0 + 48)
; 				temp_cap = (unsigned int)(item >> (6 - mod)) & 0x03;
    1539:	r3 >>= 2
; 				bucket_capacities += temp_cap;
    1540:	r3 &= 3
    1541:	r3 += r1
; 			if (i<lbi2) {/* fca bucket index in the block */
    1542:	if r8 == 11 goto -453 <LBB0_258>
; 				item = block->bitarray[in/8];
    1543:	r1 = *(u8 *)(r0 + 48)
; 				bucket_capacities += temp_cap;
    1544:	r1 &= 3
    1545:	r1 += r3
    1546:	r2 = 13
    1547:	r3 = r1
; 			if (i<lbi2) {/* fca bucket index in the block */
    1548:	if r2 > r8 goto -459 <LBB0_258>
; 				item = block->bitarray[in/8];
    1549:	r3 = *(u8 *)(r0 + 49)
; 				temp_cap = (unsigned int)(item >> (6 - mod)) & 0x03;
    1550:	r3 >>= 6
; 				bucket_capacities += temp_cap;
    1551:	r3 += r1
; 			if (i<lbi2) {/* fca bucket index in the block */
    1552:	if r8 == 13 goto -463 <LBB0_258>
; 				item = block->bitarray[in/8];
    1553:	r1 = *(u8 *)(r0 + 49)
; 				temp_cap = (unsigned int)(item >> (6 - mod)) & 0x03;
    1554:	r1 >>= 4
; 				bucket_capacities += temp_cap;
    1555:	r1 &= 3
    1556:	r1 += r3
    1557:	r2 = 15
    1558:	r3 = r1
; 			if (i<lbi2) {/* fca bucket index in the block */
    1559:	if r2 > r8 goto -470 <LBB0_258>
; 				item = block->bitarray[in/8];
    1560:	r3 = *(u8 *)(r0 + 49)
; 				temp_cap = (unsigned int)(item >> (6 - mod)) & 0x03;
    1561:	r3 >>= 2
; 				bucket_capacities += temp_cap;
    1562:	r3 &= 3
    1563:	r3 += r1
; 			if (i<lbi2) {/* fca bucket index in the block */
    1564:	if r8 == 15 goto -475 <LBB0_258>
; 				item = block->bitarray[in/8];
    1565:	r1 = *(u8 *)(r0 + 49)
; 				bucket_capacities += temp_cap;
    1566:	r1 &= 3
    1567:	r1 += r3
    1568:	r2 = 17
    1569:	r3 = r1
; 			if (i<lbi2) {/* fca bucket index in the block */
    1570:	if r2 > r8 goto -481 <LBB0_258>
; 				item = block->bitarray[in/8];
    1571:	r3 = *(u8 *)(r0 + 50)
; 				temp_cap = (unsigned int)(item >> (6 - mod)) & 0x03;
    1572:	r3 >>= 6
; 				bucket_capacities += temp_cap;
    1573:	r3 += r1
; 			if (i<lbi2) {/* fca bucket index in the block */
    1574:	if r8 == 17 goto -485 <LBB0_258>
; 				item = block->bitarray[in/8];
    1575:	r1 = *(u8 *)(r0 + 50)
; 				temp_cap = (unsigned int)(item >> (6 - mod)) & 0x03;
    1576:	r1 >>= 4
; 				bucket_capacities += temp_cap;
    1577:	r1 &= 3
    1578:	r1 += r3
    1579:	r2 = 19
    1580:	r3 = r1
; 			if (i<lbi2) {/* fca bucket index in the block */
    1581:	if r2 > r8 goto -492 <LBB0_258>
; 				item = block->bitarray[in/8];
    1582:	r3 = *(u8 *)(r0 + 50)
; 				temp_cap = (unsigned int)(item >> (6 - mod)) & 0x03;
    1583:	r3 >>= 2
; 				bucket_capacities += temp_cap;
    1584:	r3 &= 3
    1585:	r3 += r1
; 			if (i<lbi2) {/* fca bucket index in the block */
    1586:	if r8 == 19 goto -497 <LBB0_258>
; 				item = block->bitarray[in/8];
    1587:	r1 = *(u8 *)(r0 + 50)
; 				bucket_capacities += temp_cap;
    1588:	r1 &= 3
    1589:	r1 += r3
    1590:	r2 = 21
    1591:	r3 = r1
; 			if (i<lbi2) {/* fca bucket index in the block */
    1592:	if r2 > r8 goto -503 <LBB0_258>
; 				item = block->bitarray[in/8];
    1593:	r3 = *(u8 *)(r0 + 51)
; 				temp_cap = (unsigned int)(item >> (6 - mod)) & 0x03;
    1594:	r3 >>= 6
; 				bucket_capacities += temp_cap;
    1595:	r3 += r1
; 			if (i<lbi2) {/* fca bucket index in the block */
    1596:	if r8 == 21 goto -507 <LBB0_258>
; 				item = block->bitarray[in/8];
    1597:	r1 = *(u8 *)(r0 + 51)
; 				temp_cap = (unsigned int)(item >> (6 - mod)) & 0x03;
    1598:	r1 >>= 4
; 				bucket_capacities += temp_cap;
    1599:	r1 &= 3
    1600:	r1 += r3
    1601:	r2 = 23
    1602:	r3 = r1
; 			if (i<lbi2) {/* fca bucket index in the block */
    1603:	if r2 > r8 goto -514 <LBB0_258>
; 				item = block->bitarray[in/8];
    1604:	r3 = *(u8 *)(r0 + 51)
; 				temp_cap = (unsigned int)(item >> (6 - mod)) & 0x03;
    1605:	r3 >>= 2
; 				bucket_capacities += temp_cap;
    1606:	r3 &= 3
    1607:	r3 += r1
; 			if (i<lbi2) {/* fca bucket index in the block */
    1608:	if r8 == 23 goto -519 <LBB0_258>
; 				item = block->bitarray[in/8];
    1609:	r1 = *(u8 *)(r0 + 51)
; 				bucket_capacities += temp_cap;
    1610:	r1 &= 3
    1611:	r1 += r3
    1612:	r2 = 25
    1613:	r3 = r1
; 			if (i<lbi2) {/* fca bucket index in the block */
    1614:	if r2 > r8 goto -525 <LBB0_258>
; 				item = block->bitarray[in/8];
    1615:	r3 = *(u8 *)(r0 + 52)
; 				temp_cap = (unsigned int)(item >> (6 - mod)) & 0x03;
    1616:	r3 >>= 6
; 				bucket_capacities += temp_cap;
    1617:	r3 += r1
; 			if (i<lbi2) {/* fca bucket index in the block */
    1618:	if r8 == 25 goto -529 <LBB0_258>
; 				item = block->bitarray[in/8];
    1619:	r1 = *(u8 *)(r0 + 52)
; 				temp_cap = (unsigned int)(item >> (6 - mod)) & 0x03;
    1620:	r1 >>= 4
; 				bucket_capacities += temp_cap;
    1621:	r1 &= 3
    1622:	r1 += r3
    1623:	r2 = 27
    1624:	r3 = r1
; 			if (i<lbi2) {/* fca bucket index in the block */
    1625:	if r2 > r8 goto -536 <LBB0_258>
; 				item = block->bitarray[in/8];
    1626:	r3 = *(u8 *)(r0 + 52)
; 				temp_cap = (unsigned int)(item >> (6 - mod)) & 0x03;
    1627:	r3 >>= 2
; 				bucket_capacities += temp_cap;
    1628:	r3 &= 3
    1629:	r3 += r1
; 			if (i<lbi2) {/* fca bucket index in the block */
    1630:	if r8 == 27 goto -541 <LBB0_258>
; 				item = block->bitarray[in/8];
    1631:	r1 = *(u8 *)(r0 + 52)
; 				bucket_capacities += temp_cap;
    1632:	r1 &= 3
    1633:	r1 += r3
    1634:	r2 = 29
    1635:	r3 = r1
; 			if (i<lbi2) {/* fca bucket index in the block */
    1636:	if r2 > r8 goto -547 <LBB0_258>
; 				item = block->bitarray[in/8];
    1637:	r3 = *(u8 *)(r0 + 53)
; 				temp_cap = (unsigned int)(item >> (6 - mod)) & 0x03;
    1638:	r3 >>= 6
; 				bucket_capacities += temp_cap;
    1639:	r3 += r1
; 			if (i<lbi2) {/* fca bucket index in the block */
    1640:	if r8 == 29 goto -551 <LBB0_258>
; 				item = block->bitarray[in/8];
    1641:	r1 = *(u8 *)(r0 + 53)
; 				temp_cap = (unsigned int)(item >> (6 - mod)) & 0x03;
    1642:	r1 >>= 4
; 				bucket_capacities += temp_cap;
    1643:	r1 &= 3
    1644:	r1 += r3
    1645:	r2 = 31
    1646:	r3 = r1
; 			if (i<lbi2) {/* fca bucket index in the block */
    1647:	if r2 > r8 goto -558 <LBB0_258>
; 				item = block->bitarray[in/8];
    1648:	r3 = *(u8 *)(r0 + 53)
; 				temp_cap = (unsigned int)(item >> (6 - mod)) & 0x03;
    1649:	r3 >>= 2
; 				bucket_capacities += temp_cap;
    1650:	r3 &= 3
    1651:	r3 += r1
; 			if (i<lbi2) {/* fca bucket index in the block */
    1652:	if r8 == 31 goto -563 <LBB0_258>
; 				item = block->bitarray[in/8];
    1653:	r1 = *(u8 *)(r0 + 53)
; 				bucket_capacities += temp_cap;
    1654:	r1 &= 3
    1655:	r1 += r3
    1656:	r2 = 33
    1657:	r3 = r1
; 			if (i<lbi2) {/* fca bucket index in the block */
    1658:	if r2 > r8 goto -569 <LBB0_258>
; 				item = block->bitarray[in/8];
    1659:	r3 = *(u8 *)(r0 + 54)
; 				temp_cap = (unsigned int)(item >> (6 - mod)) & 0x03;
    1660:	r3 >>= 6
; 				bucket_capacities += temp_cap;
    1661:	r3 += r1
; 			if (i<lbi2) {/* fca bucket index in the block */
    1662:	if r8 == 33 goto -573 <LBB0_258>
; 				item = block->bitarray[in/8];
    1663:	r1 = *(u8 *)(r0 + 54)
; 				temp_cap = (unsigned int)(item >> (6 - mod)) & 0x03;
    1664:	r1 >>= 4
; 				bucket_capacities += temp_cap;
    1665:	r1 &= 3
    1666:	r1 += r3
    1667:	r2 = 35
    1668:	r3 = r1
; 			if (i<lbi2) {/* fca bucket index in the block */
    1669:	if r2 > r8 goto -580 <LBB0_258>
; 				item = block->bitarray[in/8];
    1670:	r3 = *(u8 *)(r0 + 54)
; 				temp_cap = (unsigned int)(item >> (6 - mod)) & 0x03;
    1671:	r3 >>= 2
; 				bucket_capacities += temp_cap;
    1672:	r3 &= 3
    1673:	r3 += r1
; 			if (i<lbi2) {/* fca bucket index in the block */
    1674:	if r8 == 35 goto -585 <LBB0_258>
; 				item = block->bitarray[in/8];
    1675:	r1 = *(u8 *)(r0 + 54)
; 				bucket_capacities += temp_cap;
    1676:	r1 &= 3
    1677:	r1 += r3
    1678:	r2 = 37
    1679:	r3 = r1
; 			if (i<lbi2) {/* fca bucket index in the block */
    1680:	if r2 > r8 goto -591 <LBB0_258>
; 				item = block->bitarray[in/8];
    1681:	r3 = *(u8 *)(r0 + 55)
; 				temp_cap = (unsigned int)(item >> (6 - mod)) & 0x03;
    1682:	r3 >>= 6
; 				bucket_capacities += temp_cap;
    1683:	r3 += r1
; 			if (i<lbi2) {/* fca bucket index in the block */
    1684:	if r8 == 37 goto -595 <LBB0_258>
; 				item = block->bitarray[in/8];
    1685:	r1 = *(u8 *)(r0 + 55)
; 				temp_cap = (unsigned int)(item >> (6 - mod)) & 0x03;
    1686:	r1 >>= 4
; 				bucket_capacities += temp_cap;
    1687:	r1 &= 3
    1688:	r1 += r3
    1689:	r2 = 39
    1690:	r3 = r1
; 			if (i<lbi2) {/* fca bucket index in the block */
    1691:	if r2 > r8 goto -602 <LBB0_258>
; 				item = block->bitarray[in/8];
    1692:	r3 = *(u8 *)(r0 + 55)
; 				temp_cap = (unsigned int)(item >> (6 - mod)) & 0x03;
    1693:	r3 >>= 2
; 				bucket_capacities += temp_cap;
    1694:	r3 &= 3
    1695:	r3 += r1
; 			if (i<lbi2) {/* fca bucket index in the block */
    1696:	if r8 == 39 goto -607 <LBB0_258>
; 				item = block->bitarray[in/8];
    1697:	r1 = *(u8 *)(r0 + 55)
; 				bucket_capacities += temp_cap;
    1698:	r1 &= 3
    1699:	r1 += r3
    1700:	r2 = 41
    1701:	r3 = r1
; 			if (i<lbi2) {/* fca bucket index in the block */
    1702:	if r2 > r8 goto -613 <LBB0_258>
; 				item = block->bitarray[in/8];
    1703:	r3 = *(u8 *)(r0 + 56)
; 				temp_cap = (unsigned int)(item >> (6 - mod)) & 0x03;
    1704:	r3 >>= 6
; 				bucket_capacities += temp_cap;
    1705:	r3 += r1
; 			if (i<lbi2) {/* fca bucket index in the block */
    1706:	if r8 == 41 goto -617 <LBB0_258>
; 				item = block->bitarray[in/8];
    1707:	r1 = *(u8 *)(r0 + 56)
; 				temp_cap = (unsigned int)(item >> (6 - mod)) & 0x03;
    1708:	r1 >>= 4
; 				bucket_capacities += temp_cap;
    1709:	r1 &= 3
    1710:	r1 += r3
    1711:	r2 = 43
    1712:	r3 = r1
; 			if (i<lbi2) {/* fca bucket index in the block */
    1713:	if r2 > r8 goto -624 <LBB0_258>
; 				item = block->bitarray[in/8];
    1714:	r3 = *(u8 *)(r0 + 56)
; 				temp_cap = (unsigned int)(item >> (6 - mod)) & 0x03;
    1715:	r3 >>= 2
; 				bucket_capacities += temp_cap;
    1716:	r3 &= 3
    1717:	r3 += r1
; 			if (i<lbi2) {/* fca bucket index in the block */
    1718:	if r8 == 43 goto -629 <LBB0_258>
; 				item = block->bitarray[in/8];
    1719:	r1 = *(u8 *)(r0 + 56)
; 				bucket_capacities += temp_cap;
    1720:	r1 &= 3
    1721:	r1 += r3
    1722:	r2 = 45
    1723:	r3 = r1
; 			if (i<lbi2) {/* fca bucket index in the block */
    1724:	if r2 > r8 goto -635 <LBB0_258>
; 				item = block->bitarray[in/8];
    1725:	r3 = *(u8 *)(r0 + 57)
; 				temp_cap = (unsigned int)(item >> (6 - mod)) & 0x03;
    1726:	r3 >>= 6
; 				bucket_capacities += temp_cap;
    1727:	r3 += r1
; 			if (i<lbi2) {/* fca bucket index in the block */
    1728:	if r8 == 45 goto -639 <LBB0_258>
; 				item = block->bitarray[in/8];
    1729:	r1 = *(u8 *)(r0 + 57)
; 				temp_cap = (unsigned int)(item >> (6 - mod)) & 0x03;
    1730:	r1 >>= 4
; 				bucket_capacities += temp_cap;
    1731:	r1 &= 3
    1732:	r1 += r3
    1733:	r2 = 47
    1734:	r3 = r1
; 			if (i<lbi2) {/* fca bucket index in the block */
    1735:	if r2 > r8 goto -646 <LBB0_258>
; 				item = block->bitarray[in/8];
    1736:	r3 = *(u8 *)(r0 + 57)
; 				temp_cap = (unsigned int)(item >> (6 - mod)) & 0x03;
    1737:	r3 >>= 2
; 				bucket_capacities += temp_cap;
    1738:	r3 &= 3
    1739:	r3 += r1
; 			if (i<lbi2) {/* fca bucket index in the block */
    1740:	if r8 == 47 goto -651 <LBB0_258>
; 				item = block->bitarray[in/8];
    1741:	r1 = *(u8 *)(r0 + 57)
; 				bucket_capacities += temp_cap;
    1742:	r1 &= 3
    1743:	r1 += r3
    1744:	r2 = 49
    1745:	r3 = r1
; 			if (i<lbi2) {/* fca bucket index in the block */
    1746:	if r2 > r8 goto -657 <LBB0_258>
; 				item = block->bitarray[in/8];
    1747:	r3 = *(u8 *)(r0 + 58)
; 				temp_cap = (unsigned int)(item >> (6 - mod)) & 0x03;
    1748:	r3 >>= 6
; 				bucket_capacities += temp_cap;
    1749:	r3 += r1
; 			if (i<lbi2) {/* fca bucket index in the block */
    1750:	if r8 == 49 goto -661 <LBB0_258>
; 				item = block->bitarray[in/8];
    1751:	r1 = *(u8 *)(r0 + 58)
; 				temp_cap = (unsigned int)(item >> (6 - mod)) & 0x03;
    1752:	r1 >>= 4
; 				bucket_capacities += temp_cap;
    1753:	r1 &= 3
    1754:	r1 += r3
    1755:	r2 = 51
    1756:	r3 = r1
; 			if (i<lbi2) {/* fca bucket index in the block */
    1757:	if r2 > r8 goto -668 <LBB0_258>
; 				item = block->bitarray[in/8];
    1758:	r3 = *(u8 *)(r0 + 58)
; 				temp_cap = (unsigned int)(item >> (6 - mod)) & 0x03;
    1759:	r3 >>= 2
; 				bucket_capacities += temp_cap;
    1760:	r3 &= 3
    1761:	r3 += r1
; 			if (i<lbi2) {/* fca bucket index in the block */
    1762:	if r8 == 51 goto -673 <LBB0_258>
; 				item = block->bitarray[in/8];
    1763:	r1 = *(u8 *)(r0 + 58)
; 				bucket_capacities += temp_cap;
    1764:	r1 &= 3
    1765:	r1 += r3
    1766:	r2 = 53
    1767:	r3 = r1
; 			if (i<lbi2) {/* fca bucket index in the block */
    1768:	if r2 > r8 goto -679 <LBB0_258>
; 				item = block->bitarray[in/8];
    1769:	r3 = *(u8 *)(r0 + 59)
; 				temp_cap = (unsigned int)(item >> (6 - mod)) & 0x03;
    1770:	r3 >>= 6
; 				bucket_capacities += temp_cap;
    1771:	r3 += r1
; 			if (i<lbi2) {/* fca bucket index in the block */
    1772:	if r8 == 53 goto -683 <LBB0_258>
; 				item = block->bitarray[in/8];
    1773:	r1 = *(u8 *)(r0 + 59)
; 				temp_cap = (unsigned int)(item >> (6 - mod)) & 0x03;
    1774:	r1 >>= 4
; 				bucket_capacities += temp_cap;
    1775:	r1 &= 3
    1776:	r1 += r3
    1777:	r2 = 55
    1778:	r3 = r1
; 			if (i<lbi2) {/* fca bucket index in the block */
    1779:	if r2 > r8 goto -690 <LBB0_258>
; 				item = block->bitarray[in/8];
    1780:	r3 = *(u8 *)(r0 + 59)
; 				temp_cap = (unsigned int)(item >> (6 - mod)) & 0x03;
    1781:	r3 >>= 2
; 				bucket_capacities += temp_cap;
    1782:	r3 &= 3
    1783:	r3 += r1
; 			if (i<lbi2) {/* fca bucket index in the block */
    1784:	if r8 == 55 goto -695 <LBB0_258>
; 				item = block->bitarray[in/8];
    1785:	r1 = *(u8 *)(r0 + 59)
; 				bucket_capacities += temp_cap;
    1786:	r1 &= 3
    1787:	r1 += r3
    1788:	r2 = 57
    1789:	r3 = r1
; 			if (i<lbi2) {/* fca bucket index in the block */
    1790:	if r2 > r8 goto -701 <LBB0_258>
; 				item = block->bitarray[in/8];
    1791:	r3 = *(u8 *)(r0 + 60)
; 				temp_cap = (unsigned int)(item >> (6 - mod)) & 0x03;
    1792:	r3 >>= 6
; 				bucket_capacities += temp_cap;
    1793:	r3 += r1
; 			if (i<lbi2) {/* fca bucket index in the block */
    1794:	if r8 == 57 goto -705 <LBB0_258>
; 				item = block->bitarray[in/8];
    1795:	r1 = *(u8 *)(r0 + 60)
; 				temp_cap = (unsigned int)(item >> (6 - mod)) & 0x03;
    1796:	r1 >>= 4
; 				bucket_capacities += temp_cap;
    1797:	r1 &= 3
    1798:	r1 += r3
    1799:	r2 = 59
    1800:	r3 = r1
; 			if (i<lbi2) {/* fca bucket index in the block */
    1801:	if r2 > r8 goto -712 <LBB0_258>
; 				item = block->bitarray[in/8];
    1802:	r3 = *(u8 *)(r0 + 60)
; 				temp_cap = (unsigned int)(item >> (6 - mod)) & 0x03;
    1803:	r3 >>= 2
; 				bucket_capacities += temp_cap;
    1804:	r3 &= 3
    1805:	r3 += r1
; 			if (i<lbi2) {/* fca bucket index in the block */
    1806:	if r8 == 59 goto -717 <LBB0_258>
; 				item = block->bitarray[in/8];
    1807:	r1 = *(u8 *)(r0 + 60)
; 				bucket_capacities += temp_cap;
    1808:	r1 &= 3
    1809:	r1 += r3
    1810:	r2 = 61
    1811:	r3 = r1
; 			if (i<lbi2) {/* fca bucket index in the block */
    1812:	if r2 > r8 goto -723 <LBB0_258>
; 				item = block->bitarray[in/8];
    1813:	r3 = *(u8 *)(r0 + 61)
; 				temp_cap = (unsigned int)(item >> (6 - mod)) & 0x03;
    1814:	r3 >>= 6
; 				bucket_capacities += temp_cap;
    1815:	r3 += r1
; 			if (i<lbi2) {/* fca bucket index in the block */
    1816:	if r8 == 61 goto -727 <LBB0_258>
; 				item = block->bitarray[in/8];
    1817:	r1 = *(u8 *)(r0 + 61)
; 				temp_cap = (unsigned int)(item >> (6 - mod)) & 0x03;
    1818:	r1 >>= 4
; 				bucket_capacities += temp_cap;
    1819:	r1 &= 3
    1820:	r1 += r3
    1821:	r3 = r1
; 			if (i<lbi2) {/* fca bucket index in the block */
    1822:	if r8 != 63 goto -733 <LBB0_258>
; 				item = block->bitarray[in/8];
    1823:	r3 = *(u8 *)(r0 + 61)
; 				temp_cap = (unsigned int)(item >> (6 - mod)) & 0x03;
    1824:	r3 >>= 2
; 				bucket_capacities += temp_cap;
    1825:	r3 &= 3
    1826:	r3 += r1
    1827:	goto -738 <LBB0_258>

0000000000003920 <LBB0_259>:
; 				if (in < BLOCKSIZE_BITS/8 && in >= 0){
    1828:	r1 = *(u64 *)(r10 - 40)
    1829:	r1 &= 255
    1830:	r4 = *(u64 *)(r10 - 48)
    1831:	if r1 > 62 goto -1785 <LBB0_37>
    1832:	r8 += 1
    1833:	r1 = 0
; 					bpf_print("found index:%u",in);
    1834:	*(u8 *)(r10 - 10) = r1
    1835:	r1 = 29989
    1836:	*(u16 *)(r10 - 12) = r1
    1837:	r1 = 980968804
    1838:	*(u32 *)(r10 - 16) = r1
    1839:	r1 = 7955925832448700262 ll
    1841:	*(u64 *)(r10 - 24) = r1
    1842:	r1 = r10
    1843:	r1 += -24
; 					bpf_print("found index:%u",in);
    1844:	r2 = 15
    1845:	r3 = r8
    1846:	call 6
    1847:	r1 = *(u64 *)(r10 - 48)
; 					cand_fp = block->bitarray[in];
    1848:	r1 += r8
    1849:	r1 = *(u8 *)(r1 + 0)
; 	__u8 fp = h1&0x000000ff;
    1850:	r9 &= 255
; 				if (cand_fp == fp){
    1851:	if r1 == r9 goto -718 <LBB0_35>
    1852:	if r7 != 3 goto -719 <LBB0_35>
    1853:	r1 = *(u64 *)(r10 - 40)
; 				if (in < BLOCKSIZE_BITS/8 && in >= 0){
    1854:	r1 &= 255
    1855:	r3 = r1
    1856:	if r1 > 61 goto -1810 <LBB0_37>
    1857:	r1 = 0
; 					bpf_print("found index:%u",in);
    1858:	*(u8 *)(r10 - 10) = r1
    1859:	r1 = 29989
    1860:	*(u16 *)(r10 - 12) = r1
    1861:	r1 = 980968804
    1862:	*(u32 *)(r10 - 16) = r1
    1863:	r1 = 7955925832448700262 ll
    1865:	*(u64 *)(r10 - 24) = r1
; 				if (in < BLOCKSIZE_BITS/8 && in >= 0){
    1866:	r3 += 2
    1867:	r1 = r10
    1868:	r1 += -24
; 					bpf_print("found index:%u",in);
    1869:	r2 = 15
    1870:	call 6
    1871:	goto -738 <LBB0_35>
